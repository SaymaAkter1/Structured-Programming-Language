                                                                              Recursion        File     Pointer 







Revers of Recursion


#include<stdio.h>
int sum=0,rem;
int revers(int n)
{
    if(n>0)
    {
      rem=n%10;
      sum=sum*10+rem;
      revers(n/10);
    }
    else

        return sum;

    return sum;
    
}
int main()
{
    int n,result;
    printf("Enter the numner : ");
    scanf("%d",&n);
    result=revers(n);
    printf(" %d ",result);

}


Fibonacci


#include <stdio.h>

int fibonacci(int n) {

   if(n == 0) {
      return 0;
   }
    
   if(n == 1) {
      return 1;
   }
   return fibonacci(n-1) + fibonacci(n-2);
}

int  main() {

   int i;
    
   for (i = 0; i < 10; i++) {
      printf("%d\t\n", fibonacci(i));
   }
    
   return 0;
}




Display Numbers 

#include <stdio.h>

void number(int n) {

   if(n < 1) {
      return;
   }
   else
    number(n-1);
   printf(" %d",n);
}

int  main() 
{
   int n;
   printf("Enter the number : ");
   scanf("%d",&n);
    
   number(n);
   return 0;
}


Sum of Numbers

#include <stdio.h>
int sum=0;
int number(int n) {

   if(n==1) {
      return n;
   }
   else
    sum=n+number(n-1);
   return sum;
}

int  main() 
{
   int n,result;
   printf("Enter the number : ");
   scanf("%d",&n);
   result = number(n);
   printf(" The sum is : %d",result);
   return 0;
}


array elements using recursion

#include <stdio.h>
lement(int arr1[],int i,int n)
{
    if(i >= n)
    {
         return;
    }
    printf("%d  ", arr1[i]);
    ArrayElement(arr1,i+1,n);
} 
int main()
{
    int n, i;
    printf("\n Enter the numner : ");
    scanf("%d",&n);
    int arr1[n];
    for(i=0;i<n;i++)
        {
          scanf("%d",&arr1[i]);
        }
    ArrayElement(arr1,0,n);

        return 0;
}


























                                                                  Pointer Problem 




1.WAP that will add two numbers using pointers. 


#include<stdio.h>
int main()
{
    int a,b,sum;
    int *p,*q;
    p = &a;
    q = &b;
    
    printf("Enter the two number : ");
    scanf("%d %d",&a,&b);

    sum = *p + *q;
    printf("sum is : %d",sum);
 
}



2.WAP that will find the maximum number between two numbers using a pointer. 


#include<stdio.h>
int main()
{
    int a ,b,max;
    int *p,*q;
    p = &a;
    q = &b;

    printf("Enter the number : ");
    scanf("%d",&a);
     printf("Enter the  number : ");
    scanf("%d",&b);

    if(*p > *q)
    {
       printf( "max = %d",*p);
    }
    else
    {
       printf( "max = %d",*q);
    }
    return 0;
}


3.WAP that will print the elements of an array without using index.

#include <stdio.h>
int main() 
{
   int i,n;
   printf("Enter the size : ");
   scanf("%d",&n);

   int a[n];
   int *p;
   p = a;

   for(i=0;i<n;i++)
   {
       scanf("%d",&p[i]);
   }
    for(i=0;i<n;i++)
   {
       printf(" %d",p[i]);
   }
    return 0;
}

####
#include <stdio.h>
int main() 
{
   int i,n;
   printf("Enter the size : ");
   scanf("%d",&n);

   int a[n];
   int *p;
   p = a;

   for(i=0;i<n;i++)
   {
       scanf("%d",p+i);
   }
    for(i=0;i<n;i++)
   {
       printf(" %d",*(p+i));
   }
    return 0;
}




4.WAP that will calculate the length of the string using pointers. 


#include<stdio.h>
#include<string.h>
int main()
{
    char str[100];
    int len;
    char *p;
    gets(str);
    p = str;
    len=strlen(p);
    printf("%d",len);
    return 0;
}



5.WAP that will swap values of two variables using pointers. 


#include<stdio.h>
int main()
{
    int a=10,b=20,temp;
    int *p,*q;
    p = &a;
    q = &b;
    
    temp = *p;
    *p = *q;
    *q = temp;

    printf("a = %d\nb = %d",*p,*q);

    return 0;
}


6.WAP that will count the number of vowels and consonants in a string using pointer.


#include<stdio.h>
#include<string.h>
int main()
{
    char str[100];
    int vowels=0,consonants=0;
    char *p;
    int len,i;
    printf("Enter the string : ");
    gets(str);
    p = str;
    len =strlen(p);
    for(i=0;i<len;i++)
    {
    if(p[i] == 'a' || p[i] == 'e' || p[i] == 'i' || p[i] == 'o' || p[i] == 'u' ||
         p[i] == 'a' || p[i] == 'e' || p[i] == 'i' || p[i] == 'o' || p[i] == 'U')
       {
           vowels++;
       }
   else
   {
       consonants++;
   }
    }
    printf("Vowels = %d\n",vowels);
     printf("Consonant = %d\n",consonants);
    return 0;
}

#####
#include<stdio.h>
#include<string.h>
int main()
{
    char str[100];
    int vowels=0,consonants=0;
    char *p;
    int len,i;
    printf("Enter the string : ");
    gets(str);
    p = str;
    len =strlen(p);
    for(i=0;*p!='\0';i++)
    {
    if(*p == 'a' || *p == 'e' || *p == 'i' || *p == 'o' || *p == 'u' ||
      *p == 'a' || *p == 'e' || *p == 'i' || *p == 'o' || *p == 'U')
       {
           vowels++;
       }
   else
   {
       consonants++;
   }
   p++;
    }
    printf("Vowels = %d\n",vowels);
     printf("Consonant = %d\n",consonants);
    return 0;
}




7.WAP that will compute the sum of all elements in an array using pointers.

#include<stdio.h>
int main()
{
   int n,i,sum=0;
   printf("Enter the number : ");
   scanf("%d",&n);

   int a[n];
   int *p;
   p = a;
   printf("Enter the element :\n");
   for(i=0;i<n;i++)
   {
       scanf("%d",&p[i]);
   }
   for(i=0;i<n;i++)
   {
       sum = sum + *(p+i);
   }
   printf("Sum is : %d",sum);

    return 0;
}

####
#include<stdio.h>
int main()
{
   int n,i,sum=0;
   printf("Enter the number : ");
   scanf("%d",&n);

   int a[n];
   int *p;
   p = a;
   printf("Enter the element :\n");
   for(i=0;i<n;i++)
   {
       scanf("%d",p+i);
   }
   for(i=0;i<n;i++)
   {
       sum = sum + *(p+i);
   }
   printf("Sum is : %d",sum);

    return 0;
}




8.WAP that will print the elements of an array in reverse indexed order. 

#include <stdio.h>
int main() 
{
   int i,n;
   printf("Enter the size : ");
   scanf("%d",&n);

   int a[n];
   int *p;
   p = a;

   for(i=0;i<n;i++)
   {
       scanf("%d",&p[i]);
   }
   for(i=n-1;i>=0;i--)
   {
       printf(" %d",p[i]);
   }  
    return 0;
}

####
#include<stdio.h>
int main() 
{

int n,i;
printf("Enter the size : ");
scanf("%d",&n);
int *p;
int a[n];
p = a;
printf("Entre the number : ");
for(i=0;i<n;i++)
{
scanf("%d",p+i);
}
for(i=n-1;i>=0;i--)
{
printf(" %d",*(p+i));
}
return 0;
}



















