
                                                  Nested Loop related problems (total 18 questions)



1.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
3	123
123
123
4	1234
1234
1234
1234

#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for (i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
printf("%d",j);
}
printf("\n");
}
 
return 0;
}
 


2.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
3	123
234
345
4	1234
2345
3456
4567

#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for (i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
printf("%d ",j+i-1);
}
printf("\n");
}
 
return 0;
}


3.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
3	1
23
345
4	1
23
345
4567
#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for (i=1;i<=n;i++)
{
for(j=1;j<=i;j++)
{
printf("%d ",i+j-1);
}
printf("\n");
}
 
return 0;
}



4.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
3	__1 
_22 
333
5	____1 
___22 
__333 
_4444 
55555
#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for (i=1;i<=n;i++)
{
for(j=n;j>i;j--)
{
printf(" ");
}
for(j=1;j<=i;j++)
{
printf("%d",i);
}
printf("\n");
}
 
return 0;
}



5.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
3	3
32
321
4	4
43
432
4321

#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for(i=n;i>=1;i--)
{
for(j=n;j>=i;j--)
{
printf("%d",j);
}
printf("\n");
}
 
return 0;
}



6.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
3	1
12
123
4	1
12
123
1234

#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for(i=1;i<=n;i++)
{
for(j=1;j<=i;j++)
{
printf("%d",j);
}
printf("\n");
}
return 0;
}



7.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
4	****
****
****
****
2	**
**

#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for(i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
printf("*");
}
printf("\n");
}
 
return 0;
}



8.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
5	*****
****
***
**
*
2	**
*
#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for (i=1;i<=n;i++)
{
for(j=i;j<=n;j++)
{
printf("*");
}
printf("\n");
}
 
return 0;
}



9.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
5	10101
01010
10101
01010
10101
3	101
010
101
#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for (i=1;i<=n;i++)
{
for(j=1;j<=n;j++)
{
printf("%d",j%2);
}
printf("\n");
}
 
return 0;
}



10.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
5	____*
___**
__***
_****
*****
3	__*
_**
***
#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for (i=1;i<=n;i++)
{
for(j=n;j>i;j--)
{
printf(" ");
}
for(j=1;j<=i;j++)
{
printf("*");
}
printf("\n");
}
 
return 0;
}



11.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
 
Sample input	Sample output
5	____*
___***
__*****
_*******
*********
3	__*
_***
*****


#include <stdio.h>
int main()
{ 
int i,j,n;
printf("Enter the number : ");
scanf("%d",&n);
 
for (i=1;i<=n;i++)
{
for(j=1;j<=n-i;j++)
{
printf(" ");
}
for(j=1;j<=2*i-1;j++)
{
printf("*");
}
printf("\n");
}
 
return 0;
}


12.WAP that will print a pattern based on the input odd integer n. Please see the sample input output.
 
Sample input	Sample output
9	____*
___***
__*****
_*******
*********
_*******
__*****
___***
____*
3	_*
***
_*
#include <stdio.h>  
int main() 
{  
  int n,i,j,k,space,star;  
  printf("Enter the number of rows : ");  
  scanf("%d",&n);  
  space=n-1;  
  star=1;  
  for(i=1;i<=n;i++)  
  {  
    for(j=1;j<=space-1;j++)  
    {  
      printf(" ");  
    }  
    for(k=1;k<=star;k++)  
    {  
      printf("*");  
    }  
    if(space>i)  
    {  
      space=space-1;  
      star=star+2;  
    }  
    if(space<i)  
    {  
   space=space+1;  
      star=star-2;  
    }  
    printf("\n");  
  }  
  return 0;
  }  


13.WAP that will print a pattern based on the input integer n. Please see the sample input output.
 
Sample input	Sample output
4	1_____1
12___21
123_321
1234321
3	1___1
12_21
12321

#include<stdio.h>
int main ()
{
    int n,i,j;
    printf("Enter the number : ");
    scanf("%d",&n);

    for(i=1;i<=n;i++)
    {
        for(j=1;j<=i;j++)
        {
            printf("%d",j);
        }
        for(j=2*i;j<=2*(n-1);j++)
        {
            printf("_");
        }
        if(i==n)
        {
            for(j=i-1;j>=1;j--)
            {
                printf("%d",j);
            }
        }
        else
        {
            for(j=i;j>=1;j--)
            {
                printf("%d",j);
            }
        }
        printf("\n");
    }

    return 0;
}



14.WAP that will print a pattern based on the input odd integer n. Please see the sample input output.
 
Sample input	Sample output
5	*****
*___*
*****
*___*
*****
3	***
*_*
***

#include <stdio.h>
int main()
{
    int i, j,n;
    printf("Enter number of rows: ");
    scanf("%d", &n);

    for(i=1; i<=n; i++)
    {
       
        for(j=1; j<=n; j++)
        {
            if(i==1 || i==(n+1)/2 || i==n || j==1 || j==n)
            {
                printf("*");
            }
            else
            {
                printf(" ");
            }
        }
        printf("\n");
    }

    return 0;
}


15.WAP that will print a pattern based on the input odd integer n. Please see the sample input output.
Sample input	Sample output
5	ZZZZZ
        Z 
     Z  
  Z   
ZZZZZ
7	ZZZZZZZ
             Z 
           Z  
        Z   
     Z    
  Z     
ZZZZZZZ

#include<stdio.h>
int main ()
{
    int n,i,j;
    printf("Enter the number : ");
    scanf("%d",&n);

    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(i==1 || i+j==n || i==n)
            {
                printf("Z");
            }
            else
            {
                printf(" ");
            }
        }

        printf("\n");
    }

    return 0;
}



16.WAP that will print a pattern based on the input odd integer n. Please see the sample input output.
 
Sample input	Sample output
5	*___*
_*_*_
__*__
_*_*_
*___*
7	*_____*
_*___*_
__*_*__
___*___
__*_*__
_*___*_
*_____*

#include <stdio.h>  
  
int main()
 {  
  int n,i,j;  
  printf("Enter the number : ");  
  scanf("%d",&n);  
    
  for(i=1;i<=n;i++)  
  {  
    for(j=1;j<=n;j++)  
    {  
       if(i==j || j==(n+1-i))  
       {  
         printf("*");  
       }  
       else  
       {  
         printf(" ");  
       }  
    }  
    printf("\n");  
  }  
  return 0;  
}  



18.WAP that will print a pattern based on the input odd integer n. Please see the sample input output.
 
Sample input	Sample output
5	H            H
H            H
H H H H H
H            H
H            H
7	H                    H
H                    H
H                    H
H H H H H H H
H                    H
H                    H
H                    H


#include<stdio.h>
int main ()
{
    int n,i,j;
    printf("Enter the number : ");
    scanf("%d",&n);

    for(i=1;i<=n;i++)
    {
        for(j=1;j<=n;j++)
        {
            if(j==1 || j==n || i==n-(i+1)+2)
            {
                printf("H");
            }
            else
            {
                printf(" ");
            }
        }

        printf("\n");
    }

    return 0;
}



                                                               Array       


1.WAP that will take n integer numbers into an array, and then print all the integers into reverse order (from the last valid index to index 0).
 
Sample input	Sample output
5
1  2  3  4  5	5  4  3  2  1
6
2  8  3  9  0  1	1  0  9  3  8  2

#include <stdio.h>
int main() {
 
int a[100],n,i;
printf("Enter the size : ");
scanf("%d",&n);
 
printf("Entre the number : ");
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
for(i=n-1;i>=0;i--)
{
printf(" %d",a[i]);
}
return 0;
}


2.WAP that will take n integer numbers into an array, and then sum up all the integers in that array.
 
Sample input	Sample output
5
1  2  3  4  5	15
6
2  8  3  9  0  1	23


#include <stdio.h>
int main() {
 
int a[100],n,i,sum=0;
printf("Enter the size : ");
scanf("%d",&n);
 
printf("Entre the number : ");
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
for(i=0;i<n;i++)
{
sum=sum+a[i];
}
printf("%d",sum);
return 0;
}



3.WAP that will take n integer numbers into an array, and then sum up all the even integers in that array.
 
Sample input	Sample output
5
1  2  3  4  5	6
6
2  8  3  9  0  1	10

#include <stdio.h>
int main() {
 
int a[100],n,i,sum=0;
printf("Enter the size : ");
scanf("%d",&n);
 
printf("Entre the number : ");
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
for(i=0;i<n;i++)
{
if(a[i] % 2 == 0)
{
sum = sum + a[i];
}
}
printf("%d",sum);
return 0;
}


4.WAP  that will take n floating point numbers into an array, and then find the average of those numbers.
 
 
Sample input	Sample output
5
1.2  5.6  10.3  4.5  5.2	5.36
8
2.1  8.3  3.7  9.2  0.6  1.5 6.4 10.1	8.38

#include <stdio.h>
int main() {
 
float a[100],n,sum=0.0;
int i;
printf("Enter the size : ");
scanf("%f",&n);
 
printf("Entre the number : ");
for(i=0;i<n;i++)
{
scanf("%f",&a[i]);
}
for(i=0;i<n;i++)
{
sum = sum + a[i];
}
printf("%.2f",sum / n);
return 0;
}


5.WAP that will take n integer numbers into an array, and then sum up all the even indexed integers in that array.
 
Sample input	Sample output
5
1  2  3  4  5	9
6
2  8  3  9  0  1	5
#include <stdio.h>
int main() {
 
int a[100],n,i,sum=0;
printf("Enter the size : ");
scanf("%d",&n);
 
printf("Entre the number : ");
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
for(i=0;i<n;i++)
{
if(i % 2 == 0)
{
sum = sum + a[i];
}
}
printf("%d",sum);
return 0;
}
 

6.WAP that will take n integer numbers in an array, n different integer numbers in a second array and put the sum of the same indexed numbers from the two arrays in a third array.
 
 
Sample input	Sample output
5
1 2 3 4 5
2 8 3 4 8	3 10 6 8 13
8
2 8 3 9 0 1 6 10
5 1 4 8 9 3 1 5	7 9 7 17 9 4 7 15

#include<stdio.h>
int main()
{
int n,i,sum=0;
printf("Enter the size : ");
scanf("%d",&n);
 
int a[n],b[n],c[n];
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
for(i=0;i<n;i++)
{
scanf("%d",&b[i]);
}
for(i=0;i<n;i++)
{
c[i] = a[i] + b[i];
}
for(i=0;i<n;i++)
{
printf("%d ",c[i]);
}
return 0;
}






7.WAP that will take n integer numbers into an array, and then reverse all the integers within that array. Finally print them all from 0 index to last valid index.
 
Sample input	Sample output
5
1  2  3  4  5	5  4  3  2  1
6
2  8  3  9  0  1	1  0  9  3  8  2


#include <stdio.h>
int main() {
 
int a[100],n,i;
printf("Enter the size : ");
scanf("%d",&n);
 
printf("Entre the number : ");
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
for(i=n-1;i>=0;i--)
{
printf(" %d",a[i]);
}
return 0;
}
 
8.WAP that will take n integer numbers into an array, and then find the maximum -minimum among them with its index position.
 
Sample input	Sample output
5
1  2  3  4  5	Max: 5, Index: 4
Min: 1, Index: 0
6
2  8  3  9  0  1	Max: 9, Index: 3
Min: 0, Index: 4


#include <stdio.h>
int main() 
{
   int n,i,index1,index2;
   printf("Enter the number : ");
   scanf("%d",&n);

   int a[n];
   for(i=0;i<n;i++)
   {
       scanf("%d",&a[i]);
   }
   int max=a[0];
   for(i=1;i<n;i++)
   {
       if(a[i]>max)
       {
           max=a[i];
           index1=i;
       }
   }
   printf("Max : %d,Index : %d\n",max,index1);

   int min=a[0];
   for(i=1;i<n;i++)
   {
       if(a[i]<min)
       {
           min=a[i];
           index2=i;
       }
   }
   printf("Min : %d,Index : %d\n",min,index2);

  return 0;
}


9.WAP that will take n alphabets into an array, and then count number of vowels in that array.
 
Sample input	Sample output
7
AKIOUEH	Count: 5
29
UNITEDINTERNATIONALUNIVERSITY	Count: 13

#include<stdio.h>
int main()
{
    int n,i,count=0;
    printf("Enter the number : ");
    scanf("%d",&n);

    char ch[n];
    for(i=0;i<n;i++)
    {
        scanf("%c",&ch[i]);
    }
    for(i=0;i<n;i++)
    {
        if(ch[i]=='a' || ch[i]=='e' || ch[i]=='i' || ch[i]=='o' || ch[i]=='u' ||
           ch[i]=='A' || ch[i]=='E' || ch[i]=='I' || ch[i]=='O' || ch[i]=='U'
          )
           {
               count++;
           }
    }
    printf("Count: %d ",count);

    return 0;
}


10.WAP that will take n integers into an array, and then search a number into that array. If found then print its index. If not found then print “NOT FOUND”.
 
Sample input	Sample output
8
7 8 1 3 2 6 4 3
3	FOUND at index position: 3, 7
8
7 8 1 3 2 6 4 3
5	NOT FOUND

#include<stdio.h>
int main ()
{
    int n,i,x,index,flag=0;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("choice the number : ");
    scanf("%d",&x);
    for(i=0;i<n;i++)
    {
        if(x==a[i])
        {
            flag=1;
            index=i;
        }
    }
    printf("FOUND at index position: %d , %d",x,index);
    if(flag==0)
    {
        printf("NOT FOUND");
    }

    return 0;
}


11.WAP that will take n integers into an array A, and then copy all numbers in reverse order from array A to another array B. Finally show all elements of both array A and B.
 
Sample input	Sample output
8
7 8 1 3 2 6 4 3	Array A : 7 8 1 3 2 6 4 3
Array B : 3 4 6 2 3 1 8 7
3
3 2 1	Array A : 3 2 1
Array B : 1 2 3
 
 #include <stdio.h>
int main() {

int a[100],n,i;
printf("Enter the size : ");
scanf("%d",&n);

printf("Entre the number : ");
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}
printf("Array A : ");
for(i=0;i<n;i++)
{
    printf(" %d",a[i]);
}
printf("\n");
printf("Array B : ");
for(i=n-1;i>=0;i--)
{
printf(" %d",a[i]);
}
return 0;
}









12.WAP that will take n integer numbers as input in an array and then insert a number in a position specified by the user in the array.
 
 
Sample input	Sample output
10
9 11 34 23 16 15 2 37 89 54
number: 78 position: 4	9 11 34 23 78 16 15 2 37 89 54
5
32 14 9 48 6
number: 16 position: 0	16 32 14 9 48 6


#include <stdio.h>
int main()
{
   int n,i,number,possition;
   printf("Enter the  number: ");
   scanf("%d", &n);

   int a[n];
   for (i=0;i<n;i++)
   {
      scanf("%d", &a[i]);
   }
   printf("Number : ");
   scanf("%d", &number);

   printf("Possition : ");
   scanf("%d", &possition);

   for (i=n-1;i>=possition;i--)
    {
      a[i+1] = a[i];
    } 

   a[possition] = number;

   for (i=0;i<=n;i++)
    {
      printf(" %d", a[i]); 
    }
   return 0;
}


13.WAP that will take n integer numbers as input in an array and then delete a number from a position specified by the user in the array.
 
Sample input	Sample output	
10
9 11 34 23 16 15 2 37 89 54
position: 4	9 11 34 23 15 2 37 89 54	
5
32 14 9 48 6
position: 0	14 9 48 6	


#include <stdio.h>
int main()
{
   int n,i,possition;
   printf("Enter the  number: ");
   scanf("%d", &n);

   int a[n];
   for (i=0;i<n;i++)
   {
      scanf("%d", &a[i]);
   }
   
   printf("Possition : ");
   scanf("%d", &possition);

   for (i=possition;i<n-1;i++)
    {
       a[i]=a[i+1];
    } 
   n=n-1;
   for (i=0;i<n;i++)
    {
      printf(" %d", a[i]); 
    }
   return 0;
}



14.WAP that will first take n integers into an array A and then m integers into array B. Now swap all elements between array A and B. Finally show all elements of both array A and B.
 
Sample input	Sample output
8
7 8 1 3 2 6 4 3
3
3 2 1	Array A : 3 2 1
Array B : 7 8 1 3 2 6 4 3
#include<stdio.h>
int main()
{
    int n,n1,i;
    printf("Enter the number : ");
    scanf("%d",&n);
    
    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("Enter the number : ");
    scanf("%d",&n1); 
    int b[n1];
    for(i=0;i<n1;i++)
    {
        scanf("%d",&b[i]);
    }
    printf("Array A : ");
    for(i=0;i<n1;i++)
    {
        printf(" %d",b[i]);
    }
     printf("\nArray B : ");
    for(i=0;i<n;i++)
    {
        printf(" %d",a[i]);
    }
return 0;
}






#include<stdio.h>
int main()
{
    int n,i,swap;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n],b[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("Enter the number : ");
    scanf("%d",&n);
    for(i=0;i<n;i++)
    {
        scanf("%d",&b[i]);
    }
    for(i=0;i<n;i++)
    {
        swap=a[i];
        a[i]=b[i];
        b[i]=swap;
    }
    printf("Array A : ");
    for(i=0;i<n;i++)
    {
        printf(" %d ",a[i]);
    }
     printf("\nArray B : ");
    for(i=0;i<n;i++)
    {
        printf(" %d ",b[i]);
    }
    return 0;
}


15.WAP that will take n positive integers into an array A. Now find all the integers that are divisible by 3 and replace them by -1 in array A. Finally show all elements of array A.
 
Sample input	Sample output
8
7 8 1 3 2 6 4 3	7 8 1 -1 2 -1 4 -1
3
3 2 1	-1 2 1

#include<stdio.h>
int main ()
{
int n,i;
printf("Enter the number : ");
scanf("%d",&n);

int a[n];
for(i=0;i<n;i++)
{
scanf("%d",&a[i]);
}

for(i=0;i<n;i++)
{
if(a[i]%3==0)
{
  a[i]=-1;
}
printf(" %d",a[i]);
}
return 0;
}



16.WAP that will take n positive integers into an array A. Now find all the integers that have an odd index and replace them by 0 in array A. Finally show all elements of array A.
 
Sample input	Sample output
8
7 8 1 3 2 6 4 3	7 0 1 0 2 0 4 0
3
3 2 1	3 0 1


#include<stdio.h>
int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    for(i=0;i<n;i++)
    {
        if(i%2==1)
        {
            a[i]=0;
        }
  printf(" %d",a[i]);
    }
    
    return 0;
}

17.WAP that will take n integers into an array A. Now sort them in ascending order within that array. Finally show all elements of array A. 

Sample input	Sample output
8
7 8 1 3 2 6 4 3	1  2  3  3  4  6  7  8
3
3 2 1	1  2  3
#include <stdio.h>
int main()
{
  int n, i, j, tmp; 
  printf("Enter the number : ");
  scanf("%d", &n);

int a[n];   
 for(i=0;i<n;i++)
     {
        scanf("%d",&a[i]);
    }
    for(i=0; i<n; i++)
    {
        for(j=i+1; j<n; j++)
        {
            if(a[j] <a[i])
            {
                tmp = a[i];
                a[i] = a[j];
                a[j] = tmp;
            }
        }
        printf("%d  ", a[i]);
    }
return 0;      
}





18.WAP that will take n integers into an array A. Now remove all duplicates numbers from that array. Finally print all elements from that array. 
 
Sample input	Sample output
8
2 8 1 3 2 6 4 3	2 8 1 3 6 4
3
3 3 3	3
4
6 7 8 9	6 7 8 9

#include <stdio.h>
int main()
{          
    int n,i, j, k;       
    printf("Enter the number : ");
    scanf("%d", &n);

    int a[n];
    for(i=0; i<n; i++)
    {
        scanf("%d", &a[i]);
    }

    for(i=0; i<n; i++)
    {
        for(j=i+1; j<n; j++)
        {
            if(a[i] == a[j])
            {
                for(k=j; k < n - 1; k++)
                {
                    a[k] = a[k + 1];
                }
                n--;
                j--;       
            }
        }
         printf("%d ", a[i]);
    }
    return 0;
}






19.

#include<stdio.h>
int main()
{
    int n,n1,i,j,flag=0;
    printf("Enter the number : ");
    scanf("%d",&n);
    
    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("Enter the number : ");
    scanf("%d",&n1); 
    
    int b[n1];
    for(j=0;j<n1;j++)
    {
        scanf("%d",&b[i]);
    }
    for(i=0;i<n;i++)
    {
        for(j=0;j<n1;j++)
        {
            if(a[i]==b[j])
            {
                flag=1;
                printf(" %d",a[i]);
            }
        }
    }
    if(flag==0)
        {
            printf("Empty set");
        }
    
return 0;
}


##### 0ccurs 

#include <stdio.h>
int main()
{
    int  n, i;
    int num, count;

    printf("Enter the  number : ");
    scanf("%d", &n);

    int arr[n];
    printf("Enter array elements:\n");
    for (i = 0; i < n; i++) 
    {
        scanf("%d", &arr[i]);
    }

    printf("Input a number to search : ");
    scanf("%d", &num);

    count = 0;
    for (i = 0; i < n; i++) {
        if (arr[i] == num)
            count++;
    }
    printf("The number occurs %d times in array", count);
    return 0;
}


###each element occurs
#include <stdio.h> 
int main()
{
    int arr[10], occursArr[10], i, j, Count,n;
    
    printf(" Enter  the Number :   ");
    scanf("%d", &n);
    
    printf("Enter elements of an Array  :  ");
    for (i = 0; i < n; i++)
    {
        scanf("%d", &arr[i]);
        occursArr[i] = -1;
    }     
 
    for (i = 0; i < n; i++)
    {
        Count = 1;
        for(j = i + 1; j <n; j++)
        {
            if(arr[i] == arr[j])
            {
                Count++;
                occursArr[j] = 0;
            }
        }
        if(occursArr[i] != 0)
        {
            occursArr[i] = Count;
        }
    }
    for (i = 0; i < n; i++)
    {
        if(occursArr[i] != 0)
        {
            printf("%d Occurs %d Times \n", arr[i], occursArr[i]);
        }       
    }        
    return 0;
}










           



                                                        Multi-Dimensional Array related problems 

                                                                           (Total 15 questions)





1.WAP that will take 9 integers into a 3 by 3 array (2D) and show them as traditional matrix view.
 
Sample input	Sample output
9 8 7 6 5 4 3 2 1	9 8 7
6 5 4
3 2 1
1 1 1 2 2 2 3 3 3	1 1 1
2 2 2
3 3 3


#include<stdio.h>
int main()
{
  int i,j;
  printf("Enter the elements : ");
  int a[3][3];
  for(i=0;i<3;i++)
  {
      for(j=0;j<3;j++)
      {
         scanf("%d",&a[i][j]);
      }
  }
  printf("The matrix\n");
  for(i=0;i<3;i++)
  {
      for(j=0;j<3;j++)
      {
        printf(" %d ",a[i][j]);
      }
      printf("\n");
  }
return 0;
}



2.WAP that will take (m x n) integers into a m by n array (2D) and print them both row-wise and column-wise.
 
Sample input (m,n)	Sample output
2 3
1 2 3
6 5 4	Row-wise: 1 2 3 6 5 4
Column-wise: 1 6 2 5 3 4
3 3
1 1 1
2 2 2
3 3 3	Row-wise: 1 1 1 2 2 2 3 3 3
Column-wise: 1 2 3 1 2 3 1 2 3

#include<stdio.h>
int main()
{
  int i,j,m,n;
  printf("Enter the  two number : ");
  scanf("%d%d",&m,&n);

  int a[m][n];
  for(i=0;i<m;i++)
  {
      for(j=0;j<n;j++)
      {
          scanf("%d",&a[i][j]);
      }
  }
  printf("Row-wise: ");
  for(i=0;i<m;i++)
  {
      for(j=0;j<n;j++)
      {
        printf("%d",a[i][j]);
      }
  }
  printf("\nColumn-wise: ");
  for(i=0;i<n;i++)
  {
      for(j=0;j<m;j++)
      {
        printf("%d",a[j][i]);
      }
  }
  
return 0;
}


3.WAP that will take inputs of a 3 by 3 matrix into a 2D array. Now find the determinant of this matrix. http://www.mathsisfun.com/algebra/matrix-determinant.html
 
Sample input	Sample output
1 2 3
4 5 6
7 8 9	0

#include<stdio.h>
int main()
{
  int i,j,x,y,z,deter;
  int a[3][3];
  for(i=0;i<3;i++)
  {
    for(j=0;j<3;j++)
    {
      scanf("%d",&a[i][j]);
    }
  }
  x = (a[1][1]*a[2][2]) - (a[2][1]*a[1][2]);
  y = (a[1][0]*a[2][2]) - (a[2][0]*a[1][2]);
  z = (a[1][0]*a[2][1]) - (a[2][0]*a[1][1]);
  deter = (a[0][0] * x) - (a[0][1] * y) + (a[0][2] * z);

  printf("%d",deter);
  
return 0;
}


4.WAP that will take inputs of a n sized square matrix into a 2D array. Now show all the elements of its two diagonals. Reference: http://en.wikipedia.org/wiki/Main_diagonal
 
Sample input	Sample output
5
1 2 3 4 5
5 4 3 2 1
2 2 2 2 2
6 7 8 9 0
1 9 3 7 4	Major diagonal: 1 4 2 9 4
Minor diagonal: 5 2 2 7 1


#include<stdio.h>
int main()
{
  int n,i,j;
  printf("Enter the number : ");
  scanf("%d",&n);
  
  int a[n][n];
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&a[i][j]);
    }
  }

  printf("Major diagonal: ");
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
        if(i==j)
        {
          printf(" %d ",a[i][j]);
        }
    }
  }
  printf("\nMinor  diagonal: ");
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
        if(i+j==n-1)
        {
          printf(" %d ",a[i][j]);
        }
    }
  }
return 0;
}


5.WAP that will take the size of an identity matrix from the user and generate the identity matrix into a 2D array. Finally display it. Reference:http://en.wikipedia.org/wiki/Identity_matrix
 
Sample input	Sample output
5	1 0 0 0 0
0 1 0 0 0
0 0 1 0 0
0 0 0 1 0
0 0 0 0 1


#include<stdio.h>
int main()
{
  int n,i,j;
  printf("Enter the number : ");
  scanf("%d",&n);
  
  int a[n][n];
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      if(i==j)
      {
        a[i][j] = 1;
      }
      else
      {
        a[i][j] = 0;
      }
      printf(" %d ",a[i][j]);
    }
    printf("\n");
  }
  
return 0;
}


6.WAP that will take inputs of two m x n sized matrix into two 2D array, suppose A and B. Now do C = A + B. Finally display all the elements from matrix / 2D array C.
 
Sample input	Sample output
2 3
1 2 3
2 3 4
1 1 1
2 2 2	2 3 4
4 5 6



#include<stdio.h>
int main()
{
  int m,n,i,j;
  printf("Enter the number : ");
  scanf("%d",&m);

  printf("Enter the number : ");
  scanf("%d",&n);

  int A[m][n];
  int B[m][n];
  int C[m][n];
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&A[i][j]);
    }
  }
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&B[i][j]);
    }
  }
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
      C[i][j] = A[i][j] + B[i][j];
    }
  }
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
      printf(" %d ",C[i][j]);
    }
    printf("\n");
  }
  
return 0;
}


7.
#include<stdio.h>
int main()
{
   int m,n,i,j;
   printf("Enter the elements m : ");
   scanf("%d",&m);
   printf("Enter the elements n : ");
   scanf("%d",&n);

   int a[m][n];
   int b[m][n];
   int c[m][n];
   printf("matrix a : \n");
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           scanf("%d",&a[i][j]);   
       }
   } 
   printf("matrix b : \n");
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           scanf("%d",&b[i][j]);   
       }
   } 
   
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           c[i][j]=a[i][j] * b[i][j];   
       }
   } 
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           printf(" %d ",c[i][j]);  
       }
       printf("\n");
   } 
    return 0;
}








8.WAP that will take inputs of m x n sized matrix into a 2D array and find the maximum element with index locationfrom that matrix. 
 
Sample input	Sample output
3 3
1 2 3
4 5 6
2 9 2	Max: 9
Location: [2][1]
2 3
9 8 7
3 4 5	Max: 9
Location: [0][0]


#include<stdio.h>
int main()
{
   int m,n,i,j,max,index1,index2;
   printf("Enter the elements m : ");
   scanf("%d",&m);
   printf("Enter the elements n : ");
   scanf("%d",&n);

   int a[m][n];
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           scanf("%d",&a[i][j]);   
       }
   }
   max=a[0][0];
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           if(max < a[i][j])
           {
               max = a[i][j];
               index1=i;
               index2=j;
           } 
       }
   }
   printf("Max : %d ",max);
   printf("\nLocation : [%d][%d]",index1,index2);


    return 0;
}


#include<stdio.h>
int main()
{
  int r,c,i,j,max;
  printf("Enter the row : ");
  scanf("%d",&r);

  printf("Enter the columns : ");
  scanf("%d",&c);

  int a[100][100];
  
  for(i=0;i<r;i++)
  {
    for(j=0;j<c;j++)
    {
      scanf("%d",&a[i][j]);
    }
  }
  max=a[0][0];
  for(i=0;i<r;i++)
  {
    for(j=0;j<c;j++)
    {
        if(max<a[i][j])
        {
            max=a[i][j];
        }
    }
  }
  printf("Max : %d ",max);
  printf("\nLocation : [%d][%d]",i,j);
  
  
return 0;
}


9.WAP that will take (n x n) integer inputs into a square matrix of dimension n (where n must be an odd number). Then calculate sum of the integers at first row, last row and two diagonals without overlap. Please see the sample input-output.
 
Sample input	Sample output
5
1 2 3 4 5
2 3 4 1 6
3 4 9 6 7
4 2 6 7 8
5 4 3 2 1	52
7
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1	23




#include<stdio.h>
int main()
{
   int m,n,i,j,sum=0;
   printf("Enter the elements m : ");
   scanf("%d",&m);
   printf("Enter the elements n : ");
   scanf("%d",&n);

   int a[m][n];
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           scanf("%d",&a[i][j]);   
       }
   }
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
         if(i==0 || i==n-1 || i==j || i+j==n-1)
         {
           sum=sum+a[i][j];
         }   
       }
   }
   printf("Sum : %d ",sum);
   


    return 0;
}



#include<stdio.h>
int main()
{
  int n,i,j,sum1=0,sum2=0,sum3=0,sum;
  printf("Enter the odd number : ");
  scanf("%d",&n);

  int a[100][100];
  
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&a[i][j]);
    }
  }
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
        if(i==0 || i==(n-1))
        {
            sum3=sum3-a[i][j];
        }
    }
  }
  for(i=1;i<=n-2;i++)
  {
sum2=sum2+a[i][i];
sum3=sum3+a[i][n-1-i];
if(i==(n/2))
{
    sum3=sum3-a[i][i];
}
  }
sum=sum1+sum2+sum3;
printf("%d",sum);

  
  
return 0;
}


10.WAP that will take (n x n) integer inputs into a square matrix of dimension n (where n must be an odd number). Then calculate sum of the integers based on following position pattern (consider only the boxed position during the sum). Please see the input-output.
 
Sample input	Sample output
5
1 2 3 4 5
2 3 4 1 6
3 4 9 6 7
4 2 6 7 8
5 4 3 2 1	71
7
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1	25

#include<stdio.h>
int main()
{
   int m,n,i,j,sum=0;
   printf("Enter the elements m : ");
   scanf("%d",&m);
   printf("Enter the elements n : ");
   scanf("%d",&n);

   int a[m][n];
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           scanf("%d",&a[i][j]);   
       }
   }
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
         if((i==n/2|| j==n/2 )|| 
         (i==0 && j<=n/2)||(j==0 && i>=n/2)||
         (i==n-1 && j>=n/2)||(j==n-1 && i<=n/2))
         {
           sum=sum+a[i][j];
         }   
       }
   }
   printf("Sum : %d ",sum);
   
    return 0;
}








#include<stdio.h>
int main()
{
  int n,i,j,sum=0;
  printf("Enter the odd number : ");
  scanf("%d",&n);

  int a[100][100];
  
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&a[i][j]);
    }
  }
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
       if(i==n/2 || (i==0 && j<n/2) || (j==-1 && i<n/2) || (i==n-1 && j>n/2) || (j==0 && i>n/2))
       {
           sum=sum+a[i][j];
       }
    }
  }
  printf("%d",sum);
  
  
return 0;
}


11.WAP that will take (n x n) integer inputs into a square matrix of dimension n (where n must be an odd number). Then calculate sum of the integers based on following position pattern (consider only the boxed position during the sum). Please see the input-output.
 
Sample input	Sample output
5
1 2 3 4 5
2 3 4 1 6
3 4 9 6 7
4 2 6 7 8
5 4 3 2 1	65
7
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1
1 1 1 1 1 1 1	33

#include<stdio.h>
int main()
{
   int m,n,i,j,sum=0;
   printf("Enter the elements m : ");
   scanf("%d",&m);
   printf("Enter the elements n : ");
   scanf("%d",&n);

   int a[m][n];
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           scanf("%d",&a[i][j]);   
       }
   }
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
         if(i%2!=0 || j%2!=0)
         {
           sum=sum+a[i][j];
         }   
       }
   }
   printf("Sum : %d ",sum);
   
    return 0;
}










#include<stdio.h>
int main()
{
  int n,i,j,sum1=0,sum2=0,sum;
  printf("Enter the odd number : ");
  scanf("%d",&n);

  int a[100][100];
  
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&a[i][j]);
    }
  }
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
       if(i%2==1)
       {
           sum1=sum1+a[i][j];
       }
    }
  }
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
       if(j%2==1)
       {
           sum2=sum2-a[i][j];
       }
       if(i%2==1 && (j%2==1))
       {
       printf("%d",sum);
       }
    }
  }
  sum=sum1+sum2;
  printf("%d",sum);
  
return 0;
}



12.WAP that will take (m x n) integer inputs into a matrix of dimension m x n. Now reverse that matrix within itself and display it. Reversal means swap 1st column with the nth column, swap 2nd column with the (n-1)th column and so on…
 
Sample input	Sample output
3 3
1 2 3
4 5 6
2 9 2	3 2 1
6 5 4
2 9 2
2 6
1 2 3 4 5 6
9 8 7 6 5 4	6 5 4 3 2 1
4 5 6 7 8 9



#include<stdio.h>
int main()
{
  int m,n,i,j;
  printf("Enter the number : ");
  scanf("%d",&m);
  printf("Enter the number : ");
  scanf("%d",&n);

  int a[100][100];
  
  for(i=0;i<n;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&a[i][j]);
    }
  }
  for(i=0;i<n;i++)
  {
    for(j=n-1;j>=0;j--)
    {
        printf(" %d ",a[i][j]);
    }
    printf("\n");
  }
return 0;
}






13.Check if a matrix is Symmetric or not 

#include<stdio.h>
int main()
{
   int m,n,i,j,flag=0;
   printf("Enter the elements m : ");
   scanf("%d",&m);
   printf("Enter the elements n : ");
   scanf("%d",&n);

   int a[m][n];
   printf("Matrix a : \n");
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
           scanf("%d",&a[i][j]);   
       }
   }
   int b[m][n];
   printf("Matrix b : \n");
   
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
         b[i][j]=a[j][i];
       }
   }

   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
         printf(" %d ",b[i][j]);
       }
       printf("\n");
   }
   
   for(i=0;i<m;i++)
   {
       for(j=0;j<n;j++)
       {
         if(a[i][j]!=b[i][j])
         {
             flag=1;
             break;
         }
       }
   }
   if(flag==0)
   {
       printf("Yes");
   }
   else
   {
       printf("No");
   }
    return 0;
}














15.WAP that will take (m x n) integer inputs into a matrix of dimension m x n. Now just simply add all the integers in that matrix and show the result.
 
Sample input	Sample output
3  3
1  7  3
7  4  5
3  5  6	41
2 6
2  2  2  2  2  2
6  5  4  3  2  1	33



#include<stdio.h>
int main()
{
  int m,n,i,j,sum=0;
  printf("Enter the number : ");
  scanf("%d",&m);
  printf("Enter the number : ");
  scanf("%d",&n);

  int a[100][100];
  
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
      scanf("%d",&a[i][j]);
    }
  }
  for(i=0;i<m;i++)
  {
    for(j=0;j<n;j++)
    {
        sum=sum+a[i][j];
    }
  }
  printf("%d",sum);
return 0;
}



### C program to interchange diagonals of a matrix

Input           Output


  3

1 2 3                 3 2 1
4 5 6                4 5 6
7 8 9                9 8 7


#include <stdio.h>
int main()
{
    
    int i,j,n,temp;
    printf("Enter the  number : ");
    scanf("%d",&n);
    
    int a[n][n];
    for(i=0; i<n; i++)
    {
        for(j=0; j<n; j++)
        {
            scanf("%d", &a[i][j]);
        }
    }
 
    for(i=0; i<n; i++)
    {
 
        temp = a[i][i];
        a[i][i] = a[i][n-i - 1];
        a[i][n - i - 1] = temp;
    }

    for(i=0; i<n; i++)
    {
        for(j=0; j<n; j++)
        {
            printf(" %d ", a[i][j]);
        }
 
        printf("\n");
    }
    return 0;
}





### Find the sum of upper & lower traiangular elements

#include<stdio.h>
int main()
{
   int n,i,j,sum1=0,sum2=0;
   printf("Enter the number : ");
   scanf("%d",&n);

   int a[n][n];
   for(i=0;i<n;i++)
   {
   for(j=0;j<n;j++)
   {
     scanf("%d",&a[i][j]);
   }    
   } 
    for(i=0;i<n;i++)
   {
   for(j=0;j<n;j++)
   {
     if(i<=j)
     sum1=sum1+a[i][j];
   }    
   } 
    for(i=0;i<n;i++)
   {
   for(j=0;j<n;j++)
   {
     if(j<=i)
     sum2=sum2+a[i][j];
   }    
   }
   printf(" upper : %d\n",sum1);
   printf("lower : %d",sum2);        
    return 0;
}












- [ ] 
