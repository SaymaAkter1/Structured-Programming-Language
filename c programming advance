
                                                                 Function Related Problems 
                                                                       (Total 27 questions) 


1.Function to print a custom message. 

#include<stdio.h>

void message_print()
{
   printf("This is a function"); 
}

int main()
{
   message_print();
   return 0;
}



2.Function to print an input character value.

#include<stdio.h>

void print_character( char c)
{
    printf("Value received from main : %c",c);
}
int main()
{
   char a;
   printf("Enter the any character : ");
   scanf("%c",&a);
   print_character(a);
   return 0;   
}



3.Function to determine if a number is even or odd.

#include<stdio.h>

void checking_number(int x)
{
    if(x % 2 == 0)
    {
        printf("Even");
    }
    else
    {
        printf("Odd");
    }
}

int main()
{
    int a;
    printf("Enter the number : ");
    scanf("%d",&a);

    checking_number(a);

}



4.Function to determine if a number is positive, negative or zero.

#include<stdio.h>

void checking_number(int x)
{
    if(x>0)
   {
      printf("Positive");
   }
   else if(x<0)
   {
       printf("Negative");
   }
   else if(x==0)
   {
       printf("Zero");
   } 
}

int main()
{
   int a;
   printf("Enter the number : ");
   scanf("%d",&a);

   checking_number(a);

   return 0;
}


5.Function that takes two numbers as input and determines if the first number is greater than, 
equal to or less than the second number.

#include<stdio.h>

void checking_number(int x,int y)
{
    if(x>y)
   {
       printf("%d  is greater than %d",x,y);
   }
   else if(x<y)
   {
       printf("%d is less than %d",x,y);
   }
   else if(x==y)
   {
       printf("%d  is equal to %d",x,y);
   }
}

int main()
{
   int a,b;
   printf("Enter the two number : ");
   scanf("%d %d",&a,&b);

   checking_number(a,b);

   return 0;
}


6.Function to calculate the sum of n numbers coming from the console. 

#include<stdio.h>

int sum_number(int x,int y,int z)
{
    int sum;
    sum=x + y + z;
   printf(" Sum In Function: %d",sum);
   return sum;
}

int main()
{
   int a,b,c,sum;
   printf("Enter the three number : ");
   scanf("%d %d %d",&a,&b,&c);
   
   sum = sum_number(a,b,c);

   printf("\nSum In Main : %d",sum);
   
   return 0;
}


7.Function to calculate the sum of n numbers coming from the console and stored in an array. 

#include<stdio.h>

int sum_number(int x[],int n)
{
    int i,sum=0;
    for(i=0;i<n;i++)
    {
    sum = sum + x[i];
    }
   printf(" Sum In Function: %d",sum);
   return sum;
}

int main()
{
   int n,i,sum;
   printf("Enter the  number : ");
   scanf("%d",&n);

   int a[n];
   for(i=0;i<n;i++)
   {
       scanf("%d",&a[i]);
   }
   
   sum = sum_number(a,n);

   printf("\nSum In Main : %d",sum);
   
   return 0;
}



8.Function that takes an array of n integer numbers as input and prints them in reverse order.

#include<stdio.h>

int rev_number(int x[],int n)
{
    int i,rev;
    for(i=n-1;i>=0;i--)
    {
      printf(" %d ",x[i]);
    }
   return rev;
   
}

int main()
{
   int n,i,rev;
   printf("Enter the  number : ");
   scanf("%d",&n);

   int a[n];
   for(i=0;i<n;i++)
   {
       scanf("%d",&a[i]);
   }
   
   rev = rev_number(a,n);
   
   return 0;
}



9.Function to calculate the factorial of a number. 

#include<stdio.h>

int factorial_number(int x)
{
    int i,fact=1;
    for(i=1;i<=x;i++)
    {
        fact=fact*i;    
    }
    return fact;

}
int main()
{ 
    int n,i,fact;
    printf("Enter the number : ");
    scanf("%d",&n);

    fact = factorial_number(n);
    printf("%d",fact);
    return 0;
}


10.Function to take two positive numbers x and y as input and calculate x to the power y.

#include<stdio.h>

int power_number(int x,int y)
{
    int i,pow=1;
    for(i=1;i<=y;i++)
 {
    pow=pow * x;
 }
 return pow;
}
int main()
{
 int a,b,pow;
 printf("Enter the number : ");
 scanf("%d %d",&a,&b);

 pow = power_number(a,b);
 printf("%d to the power %d is : %d",a,b,pow);
 return 0;
}


11.Function to take a string as input and find its length. 

#include<stdio.h>
#include<string.h>

void string_len(char str[])
{
    int i,count=0;
    for(i=0;str[i]!='\0';i++)
    {
        count++;
    }
    printf("%d",count);
}
int main()
{
    char str[50];
    
    printf("Enter the string : ");
    gets(str);
    string_len(str);
    return 0;
}


12.Function to swap two numbers. 
(Restriction: Pass by value) 



13.Function to swap two numbers. 
(Restriction: Pass by reference)



14.Function to determine only even numbers in an array of input integers.

#include<stdio.h>

void even_number(int a[],int n)
{
    int i;
     
    for(i=0;i<n;i++)
    {
        if(a[i]%2==0)
        {
            printf(" %d ",a[i]);
        }
    }
}

int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);
    int x[n];
    for(i=0;i<n;i++)
     {
         scanf("%d",&x[i]);
     }
    even_number(x,n);
    return 0;
}


15.Function that finds and returns the minimum value in an array.

#include<stdio.h>
int  minimum_number(int x[],int n)
{
    int i,mini;
    mini = x[0];
    for(i=0;i<n;i++)
    {
        if(x[i]<mini)
        {
            mini = x[i];
        }
    }
    return mini;
}
int main()
{
    int n,i,mini;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    
    mini =  minimum_number(a,n);
    printf(" Minimum Value : %d",mini);
    return 0;
}



16.Function that multiplies the array elements by 2 and returns the array.

#include<stdio.h>
void multiplies_array(int x[],int n)
{
    int i;
    for(i=0;i<n;i++)
    {
       printf(" %d ",x[i]*2);
    }
    
}
int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }

    multiplies_array(a,n);
    
    return 0;
}


17.Function to sort and return an input array in ascending order. 

#include<stdio.h>
void  ascending_array(int x[],int n)
{
    int i,j,temp;
    for(i=0;i<n;i++)
    {
       for(j=i+1;j<n;j++)
       {
           if(x[i]>x[j])
           {
               temp=x[i];
               x[i]=x[j];
               x[j]=temp;
           }
       }
       printf(" %d ",x[i]);
    }
      
}
int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }

    ascending_array(a,n);
    
    return 0;
}



18.Function “IsPrime()” to determine whether a number is prime or not.

#include<stdio.h>

void IsPrime(int n)
{
   int i,flag=0;

    if(i==1 || i==0)
   {
       printf("Not Prime");
       
   }
   for(i=2;i<=n/2;i++)
    {
        
        if(n % i == 0)
        {
            flag = 1;
            printf("Not Prime \n");
            break;
        }
     if(n % i != 0)
        {
            flag = 0;
            printf(" Prime \n");
            break;
        }
    }
}

int main()
{
    int a;
    printf("Enter the number : ");
    scanf("%d",&a);
    
    IsPrime(a);

return 0;
}


19.Function “GeneratePrime()” to compute the prime numbers less than N, where N is an input 
integer. GeneratePrime() uses IsPrime() to check whether a number is prime or not. 






20.Function “GenNthPrime()”to compute the N th prime number, where N is an integer input. 






21.Implement the following functions and calculate standard deviation of an array whose values 
come from the terminal
                                                                           TakeInput() 
                                                                   CalcMean(array, num_of_elem) 
                                                          Calc_Std_deviation(array, num_of_elem) 




#include <stdio.h>
#include <math.h>

void take_input(int x[],int n)
{
  int i;
  printf("Enter the element : \n");
  for(i=0; i<n; i++)
   {
     scanf("%d", &x[i]);
   }
}
float cal_mean(int x[],int n )
{
    int i,sum=0;
    float mean;
     for(i=0; i<n; i++)
   {
     sum = sum + x[i];
   }
  mean = sum /n;
  return mean;
}

void standard_deviation(int x[],int n)
{    
    int i,sum1=0;
    float Variance,sd,M;
    M=cal_mean(x,n);
  for(i=0; i<n; i++)
   {
    
     sum1 = sum1 + pow( x[i] - M,2);
   }
  Variance = sum1 / n;
  sd = sqrt(Variance);
  printf(" Standard Deviation : %.2f",sd);
}

int main()
{
  int  n;
   
  printf(" Enter the number Value : ");
  scanf("%d", &n);
  int a[n];
 
   take_input(a,n);
   standard_deviation(a,n); 
}














#include <stdio.h>
#include <math.h>

float standard_deviation(float a[],int n)
{    
    int i;
    float Mean,Variance,sd,sum=0,sum1=0;
    for(i=0; i<n; i++)
   {
     sum = sum + a[i];
   }
  
  Mean = sum /n;

  for(i=0; i<n; i++)
   {
    
     sum1 = sum1 + pow( a[i] - Mean,2);
   }
  Variance = sum1 / n;
  sd = sqrt(Variance);
  return sd;
}

int main()
{
  
  int  i,n;
  float result; 
  printf(" Enter the number Value : ");
  scanf("%d", &n);

  printf("Enter the element : \n");
  float x[n];
  for(i=0; i<n; i++)
   {
     scanf("%f", &x[i]);
   }
   
   result = standard_deviation(x,n);
  
  printf("Standard deviation = %.2f\n",result);
}






22.Function find_substr( ) that takes two string arrays (a, b) as parameters, returns 1 if string b 
is found anywhere in string a, or returns  -1 if no match is found. 
             
                              (Assuming, strlen(a)>strlen(b))



#include<stdio.h>
#include<string.h>
int fimd_substring(char str[100],char sub[100])
{
   int i,j,len1,len2;
   len1=strlen(str);
   len2=strlen(sub);
   for(i=0;i<=len1-len2;i++)
   {
       for(j=0;j<=len2;j++)
       {
           if(str[i+j]!=sub[j])
           {
               break;
           }
           if(j==len2)
           {
               return 1;
           }
       }
   }
   return -1;
}
int main()
{
    char str[100],sub[100];
    int result;
    printf("Enter the string : ");
    gets(str);
    printf("Enter the substring : ");
    gets(sub);
    result=fimd_substring(str,sub);
    if(result==1)
    {
        printf("1");
    }
    else
    {
        printf("-1");
    }
}





23.Function find_substr( ) that takes two string arrays (a, b) as parameters, uses function 
str_length() to determine the lengths of the strings, and then looks for the smaller string 
anywhere in the bigger string. It returns 1 if the substring is found, or returns  -1 if no match 
is found.
 
                [Restriction: str_length() cannot uses built-in strlen() function]


#include <stdio.h>
#include <string.h>

int str_length(char ch[])
{
    int len=0,i=0;
    while(ch[i++]!='\0')
    {
        len++;
    }
    return len;
}

int find_substr(char str[],char sub[])
{
    int flag=0;
    for(int i = 0; i<str_length(str); i++)
    {
        int j=0;
        if(str[i] == sub[j])
        {
            int c=0;
            for(int j=0; j<str_length(sub);j++)
            {
                if(str[i+j]==sub[j])
                    c++;
            }
            if(c==str_length(sub))
                flag=1;
        }

    }
    if(flag==0)
    {
        return -1;
    }
    else
        return 1;
}
int main()
{
    char str[100],sub[100];
    printf("Enter the string : ");
    gets(str);
    printf("Enter the substring : ");
    gets(sub);
    printf("%d",find_substr(str,sub));

}





24.Program that continuously takes two positive integers as inputs and uses two functions to 
find their GCD (greatest common divisor) and LCM (least common multiple). Both functions 
take parameters and returns desired values. 

                                         [Hint: Use infinite loop to process inputs]


#include<stdio.h>

void gcd_lcm(int n1,int n2)
{
    int reminder,gcd,lcm,a,b;
    a=n1;
    b=n2;

    while(b!=0)
    {
        reminder = a%b;
        a = b;
        b = reminder;
    }
    gcd = a;
    lcm = (n1*n2)/gcd;
    printf("GCD : %d",gcd);
    printf("\nLCM : %d",lcm);   
}
int main()
{
    int x,y;
    while(1)
    {
    printf("Enter the two number : ");
    scanf("%d %d",&x,&y);
    
    gcd_lcm(x,y);
    printf("\n");
    }
    return 0;
}




25.Program that implements function to perform operations on a 3X5 matrix: 
                      
                                                               InputMatrix() 
                                                              ShowMatrix() 
                                                         ScalarMultiply()






26.Program that implements function to perform operations on a MXN matrix: 

                                                               InputMatrix() 
                                                               ShowMatrix() 
                                                          ScalarMultiply()






Program to convert a positive integer to another base using the following functions

            I. Get_Number_And_Base () : Takes number to be converted (N) and base value (B) 
               from user. Base must be between 2 and 16. 

           II. Convert_Number () : Does the conversion 

          III. Show_Converted_Number() : Displays the converted value.













// A function to check if a string str is palindrome or not………


#include <stdio.h>
#include <string.h>
 
void isPalindrome(char str[])
{
    int len,flag=0,i;
        len = strlen(str);

    for(i=0;i<len;i++)
    {
        if(str[i]!=str[len-i-1])
        {
            flag=1;
            break;
        }
        if(str[i]==str[len-i-1])
        {
            flag=0;
        }
    }
    if(flag==1)
    {
        printf("%s is not a palindrome\n", str);
    }
     if(flag==0)
    {
        printf("%s is a palindrome\n", str);
    }

}
 
// Driver program to test above function
int main()
{
    isPalindrome("abba");
    isPalindrome("abbccbba");
    isPalindrome("geeks");
    return 0;
}



                                                    Lab Assignment 


1.Function to take a string as input and find its length.

#include<stdio.h>
#include<string.h>
void string_length(char str[])
{
    int i,count=0;
    for(i=0;str[i]!='\0';i++)
    {
        count++;
    }
    printf("%d",count);
}
int main()
{
    char str[100];
    printf("Enter the string : ");
    gets(str);
    
    string_length(str);
    return 0;
}


#include<stdio.h>
#include<string.h>
int main ()
{
    char str1[150],str2[100];
    int n,i;
    int wicket;

    printf("Enter the Players name : ");
    gets(str1);
    printf(" Enter the Players country : ");
    gets(str2);

    printf("Enter the match number : ");
    scanf("%d",&n);

    printf("Enter the wickets : ");
    int w[n];
    for(i=0;i<n;i++)
    {
       scanf("\n%d",&w[i]); 
    }
    printf("Enter the runs : ");
    int r[n];
    for(i=0;i<n;i++)
    {
       scanf("\n%d",&r[i]); 
    }
    
    for(i=0;i<n;i++)
    {
      printf("\nmatch %d : \n",i+1);
       wicket = w[i] * 12;
      printf(" Wicket points : %d\n",wicket);
      if( r[i] <= 25)
    {
        printf(" run points 5");
    }
    else if( r[i] <= 50)
    {
        printf(" run points 10");
    }
    else if( r[i] <=75)
    {
        printf( "run points 15");
    }
    else if(76 <= r[i])
    {
        printf(" run points 20");
    }
     
    }
    
    
    return 0;
}



12




#include<stdio.h>
#include<string.h>

struct player
{
    char name[30];
    char country[20];
    int runs[3];
    int wickets[3];
    int points[3];
};
struct player input_information();
struct player process_ponts();
struct player decition();

struct player take_inform[2];

int main()
{

  input_information();
  process_ponts();
  decition();

}
struct player input_information()
{
    int i,j;
    for(i=0;i<2;i++)
    {
        printf("Enter the %d player information ",i+1);
        printf("\nName : ");
        fflush(stdin);
        gets(take_inform[i].name);
        printf("Countery : ");
        fflush(stdin);
        gets(take_inform[i].country);
        printf("Emte the runs : ");
        for(j=0;j<3;j++)
        {
            scanf("%d",&take_inform[i].runs[j]);
        }
        printf("Emte the wicket : ");
        for(j=0;j<3;j++)
        {
            scanf("%d",&take_inform[i].wickets[j]);
        }
    }
}
struct player process_ponts()
{
  int i,j;
  for(i=0;i<2;i++)
  {
      for(j=0;j<3;j++)
      {
          if(take_inform[i].runs[j] < 0)
          printf("Negative runs is invalid");
          else if(take_inform[i].runs[j] <= 25)
          take_inform[i].points[j] += 5;
          else if(take_inform[i].runs[j] > 25 && take_inform[i].runs[j] <= 50)
          take_inform[i].points[j] +=10;
          else if(take_inform[i].runs[j] > 50 && take_inform[i].runs[j] <= 75)
          take_inform[i].points[j] += 15;
          else if(take_inform[i].runs[j] > 75)
          take_inform[i].points[j] += 20;
          if(take_inform[i].wickets[j] >= 1)
          take_inform[i].points[j] += (12 * take_inform[i].wickets[j]);
      }
  }
}
struct player decition()
{
    int i,j,sum[2],a[2];
    for(i=0;i<3;i++)
    {    
        printf("Match : %d\n",i+1);
        for(j=0;j<2;j++)
        {
           printf("%s points : ",take_inform[j].name);
           printf(" %d \n",take_inform[j].points[i]);
           a[j] = take_inform[j].points[i];
        }
        if(a[0] > a[1])
        {
            printf(" MOM : %s ",take_inform[0].name);
        }
        else
        {
           printf(" MOM : %s ",take_inform[1].name); 
        }
        
        printf("\n\n");
    }
    for(i=0;i<2;i++)
    {
        for(j=0;j<3;j++)
        {
            sum[i] += take_inform[i].points[j];
        }
    }
    if(sum[0] > sum[1])
    {
        printf("Man of the series : %s",take_inform[0].name);
    }
    else
    { 
        printf("Man of the series : %s",take_inform[1].name);
    }
}
























#include<stdio.h>

struct player
{
    char Name[30];
    char Country[20];
    int Runs[3];
    int wickets[3];
    int points[3];
};

struct player input_information();
struct player process_points();
struct player decision();

struct player take_info[2];

int main()
{
    input_information();
    process_points();
    decision();
}

struct player input_information()
{ 
    int i,j;
    for ( i = 0; i < 2; i++)
    {
        printf("Enter player %d information: \n", i+1);
        printf("Name: "); 
        fflush(stdin);
        gets(take_info[i].Name);
        printf("Enter country name: ");
        fflush(stdin);
        gets(take_info[i].Country);
        printf("Enter the runs of the matches: ");
        for ( j = 0; j < 3; j++)
            scanf("%d",&take_info[i].Runs[j]);
        printf("Enter the wickets of the matches: ");
        for ( j = 0; j < 3; j++)
            scanf("%d",&take_info[i].wickets[j]);
        printf("\n\n");
    }
}

struct player process_points()
{
    int i,j;
    for ( i = 0; i < 2; i++)
    {
        for ( j = 0; j < 3; j++)
        {
            if (take_info[i].Runs[j] < 0)
                printf("Negative runs is invalid");
            else if (take_info[i].Runs[j] <= 25)
                take_info[i].points[j] += 5;
            else if (take_info[i].Runs[j] > 25 && take_info[i].Runs[j] <= 50)
                take_info[i].points[j] += 10;
            else if (take_info[i].Runs[j] > 50 && take_info[i].Runs[j] <= 75)
                take_info[i].points[j] += 15;
            else if (take_info[i].Runs[j] > 75)
                take_info[i].points[j] += 20;
            if (take_info[i].wickets[j] < 0)
                printf("Wickets cannot be Negative.");
            else if (take_info[i].wickets[j] >= 1)
                take_info[i].points[j] += (12 * take_info[i].wickets[j]);
        }
    }
}

struct player decision()
{
    int i,j,sum[2],a[2];
    for ( i = 0; i < 3; i++)
    {
        printf("Match %d:\n",i+1);
        for (j = 0; j < 2; j++)
        {
            printf("%s points",take_info[j].Name);
            printf(": %d\n",take_info[j].points[i]);
            a[j]=take_info[j].points[i];
        }
        if(a[0] > a[1])
            printf("MOM: %s",take_info[0].Name);
        else
            printf("MOM: %s",take_info[1].Name);
        printf("\n\n");
    }
    for ( i = 0; i < 2; i++)
    {
        for ( i = 0; i < 3; i++)
            sum[i] += take_info[i].points[j];
    }
    if (sum[0] > sum[1])
        printf("Man of the series: %s",take_info[0].Name);
    else
        printf("Man of the series: %s",take_info[1].Name);
    printf("\n\n\n");
}






#### Write a program that takes a sentence from keyboard, makes the sentence camel/title 
casing (first letter of all words capital), appends your student id at the end of the 
sentence as the last word, and finally display the sentence. 
For example, if your id is â€œ011202017â€ 
Input = â€œIt is a nice sunny morning today
Output: â€œIt Is A Nice Sunny Morning Today 011202017



#include<stdio.h>
#include<string.h>
int main()
{
    char s[100];
    char  Id[100];
    int i;
    gets(s);
    gets(Id);
    for(i=0;s[i]!='\0';i++)
    {
        if(i==0)
        {
            s[i]=s[i]-32;
        }
        if (s[i]==' '){
            s[i+1]=s[i+1]-32;
        }
    }
    strcat(s,Id);
    printf ("%s",s);
    return 0;
}











                                                                 Function Related Problems 
                                                                       (Total 27 questions) 


1.Function to print a custom message. 

#include<stdio.h>

void message_print()
{
   printf("This is a function"); 
}

int main()
{
   message_print();
   return 0;
}



2.Function to print an input character value.

#include<stdio.h>

void print_character( char c)
{
    printf("Value received from main : %c",c);
}
int main()
{
   char a;
   printf("Enter the any character : ");
   scanf("%c",&a);
   print_character(a);
   return 0;   
}



3.Function to determine if a number is even or odd.

#include<stdio.h>

void checking_number(int x)
{
    if(x % 2 == 0)
    {
        printf("Even");
    }
    else
    {
        printf("Odd");
    }
}

int main()
{
    int a;
    printf("Enter the number : ");
    scanf("%d",&a);

    checking_number(a);

}



4.Function to determine if a number is positive, negative or zero.

#include<stdio.h>

void checking_number(int x)
{
    if(x>0)
   {
      printf("Positive");
   }
   else if(x<0)
   {
       printf("Negative");
   }
   else if(x==0)
   {
       printf("Zero");
   } 
}

int main()
{
   int a;
   printf("Enter the number : ");
   scanf("%d",&a);

   checking_number(a);

   return 0;
}


5.Function that takes two numbers as input and determines if the first number is greater than, 
equal to or less than the second number.

#include<stdio.h>

void checking_number(int x,int y)
{
    if(x>y)
   {
       printf("%d  is greater than %d",x,y);
   }
   else if(x<y)
   {
       printf("%d is less than %d",x,y);
   }
   else if(x==y)
   {
       printf("%d  is equal to %d",x,y);
   }
}

int main()
{
   int a,b;
   printf("Enter the two number : ");
   scanf("%d %d",&a,&b);

   checking_number(a,b);

   return 0;
}


6.Function to calculate the sum of n numbers coming from the console. 

#include<stdio.h>

int sum_number(int x,int y,int z)
{
    int sum;
    sum=x + y + z;
   printf(" Sum In Function: %d",sum);
   return sum;
}

int main()
{
   int a,b,c,sum;
   printf("Enter the three number : ");
   scanf("%d %d %d",&a,&b,&c);
   
   sum = sum_number(a,b,c);

   printf("\nSum In Main : %d",sum);
   
   return 0;
}


7.Function to calculate the sum of n numbers coming from the console and stored in an array. 

#include<stdio.h>

int sum_number(int x[],int n)
{
    int i,sum=0;
    for(i=0;i<n;i++)
    {
    sum = sum + x[i];
    }
   printf(" Sum In Function: %d",sum);
   return sum;
}

int main()
{
   int n,i,sum;
   printf("Enter the  number : ");
   scanf("%d",&n);

   int a[n];
   for(i=0;i<n;i++)
   {
       scanf("%d",&a[i]);
   }
   
   sum = sum_number(a,n);

   printf("\nSum In Main : %d",sum);
   
   return 0;
}



8.Function that takes an array of n integer numbers as input and prints them in reverse order.

#include<stdio.h>

int rev_number(int x[],int n)
{
    int i,rev;
    for(i=n-1;i>=0;i--)
    {
      printf(" %d ",x[i]);
    }
   return rev;
   
}

int main()
{
   int n,i,rev;
   printf("Enter the  number : ");
   scanf("%d",&n);

   int a[n];
   for(i=0;i<n;i++)
   {
       scanf("%d",&a[i]);
   }
   
   rev = rev_number(a,n);
   
   return 0;
}



9.Function to calculate the factorial of a number. 

#include<stdio.h>

int factorial_number(int x)
{
    int i,fact=1;
    for(i=1;i<=x;i++)
    {
        fact=fact*i;    
    }
    return fact;

}
int main()
{ 
    int n,i,fact;
    printf("Enter the number : ");
    scanf("%d",&n);

    fact = factorial_number(n);
    printf("%d",fact);
    return 0;
}


10.Function to take two positive numbers x and y as input and calculate x to the power y.

#include<stdio.h>

int power_number(int x,int y)
{
    int i,pow=1;
    for(i=1;i<=y;i++)
 {
    pow=pow * x;
 }
 return pow;
}
int main()
{
 int a,b,pow;
 printf("Enter the number : ");
 scanf("%d %d",&a,&b);

 pow = power_number(a,b);
 printf("%d to the power %d is : %d",a,b,pow);
 return 0;
}


11.Function to take a string as input and find its length. 

#include<stdio.h>
#include<string.h>

void string_len(char str[])
{
    int i,count=0;
    for(i=0;str[i]!='\0';i++)
    {
        count++;
    }
    printf("%d",count);
}
int main()
{
    char str[50];
    
    printf("Enter the string : ");
    gets(str);
    string_len(str);
    return 0;
}


12.Function to swap two numbers. 
(Restriction: Pass by value) 



13.Function to swap two numbers. 
(Restriction: Pass by reference)



14.Function to determine only even numbers in an array of input integers.

#include<stdio.h>

void even_number(int a[],int n)
{
    int i;
     
    for(i=0;i<n;i++)
    {
        if(a[i]%2==0)
        {
            printf(" %d ",a[i]);
        }
    }
}

int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);
    int x[n];
    for(i=0;i<n;i++)
     {
         scanf("%d",&x[i]);
     }
    even_number(x,n);
    return 0;
}


15.Function that finds and returns the minimum value in an array.

#include<stdio.h>
int  minimum_number(int x[],int n)
{
    int i,mini;
    mini = x[0];
    for(i=0;i<n;i++)
    {
        if(x[i]<mini)
        {
            mini = x[i];
        }
    }
    return mini;
}
int main()
{
    int n,i,mini;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    
    mini =  minimum_number(a,n);
    printf(" Minimum Value : %d",mini);
    return 0;
}



16.Function that multiplies the array elements by 2 and returns the array.

#include<stdio.h>
void multiplies_array(int x[],int n)
{
    int i;
    for(i=0;i<n;i++)
    {
       printf(" %d ",x[i]*2);
    }
    
}
int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }

    multiplies_array(a,n);
    
    return 0;
}


17.Function to sort and return an input array in ascending order. 

#include<stdio.h>
void  ascending_array(int x[],int n)
{
    int i,j,temp;
    for(i=0;i<n;i++)
    {
       for(j=i+1;j<n;j++)
       {
           if(x[i]>x[j])
           {
               temp=x[i];
               x[i]=x[j];
               x[j]=temp;
           }
       }
       printf(" %d ",x[i]);
    }
      
}
int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }

    ascending_array(a,n);
    
    return 0;
}



18.Function “IsPrime()” to determine whether a number is prime or not.

#include<stdio.h>

void IsPrime(int n)
{
   int i,flag=0;

    if(i==1 || i==0)
   {
       printf("Not Prime");
       
   }
   for(i=2;i<=n/2;i++)
    {
        
        if(n % i == 0)
        {
            flag = 1;
            printf("Not Prime \n");
            break;
        }
     if(n % i != 0)
        {
            flag = 0;
            printf(" Prime \n");
            break;
        }
    }
}

int main()
{
    int a;
    printf("Enter the number : ");
    scanf("%d",&a);
    
    IsPrime(a);

return 0;
}


19.Function “GeneratePrime()” to compute the prime numbers less than N, where N is an input 
integer. GeneratePrime() uses IsPrime() to check whether a number is prime or not. 






20.Function “GenNthPrime()”to compute the N th prime number, where N is an integer input. 






21.Implement the following functions and calculate standard deviation of an array whose values 
come from the terminal
                                                                           TakeInput() 
                                                                   CalcMean(array, num_of_elem) 
                                                          Calc_Std_deviation(array, num_of_elem) 




#include <stdio.h>
#include <math.h>

void take_input(int x[],int n)
{
  int i;
  printf("Enter the element : \n");
  for(i=0; i<n; i++)
   {
     scanf("%d", &x[i]);
   }
}
float cal_mean(int x[],int n )
{
    int i,sum=0;
    float mean;
     for(i=0; i<n; i++)
   {
     sum = sum + x[i];
   }
  mean = sum /n;
  return mean;
}

void standard_deviation(int x[],int n)
{    
    int i,sum1=0;
    float Variance,sd,M;
    M=cal_mean(x,n);
  for(i=0; i<n; i++)
   {
    
     sum1 = sum1 + pow( x[i] - M,2);
   }
  Variance = sum1 / n;
  sd = sqrt(Variance);
  printf(" Standard Deviation : %.2f",sd);
}

int main()
{
  int  n;
   
  printf(" Enter the number Value : ");
  scanf("%d", &n);
  int a[n];
 
   take_input(a,n);
   standard_deviation(a,n); 
}














#include <stdio.h>
#include <math.h>

float standard_deviation(float a[],int n)
{    
    int i;
    float Mean,Variance,sd,sum=0,sum1=0;
    for(i=0; i<n; i++)
   {
     sum = sum + a[i];
   }
  
  Mean = sum /n;

  for(i=0; i<n; i++)
   {
    
     sum1 = sum1 + pow( a[i] - Mean,2);
   }
  Variance = sum1 / n;
  sd = sqrt(Variance);
  return sd;
}

int main()
{
  
  int  i,n;
  float result; 
  printf(" Enter the number Value : ");
  scanf("%d", &n);

  printf("Enter the element : \n");
  float x[n];
  for(i=0; i<n; i++)
   {
     scanf("%f", &x[i]);
   }
   
   result = standard_deviation(x,n);
  
  printf("Standard deviation = %.2f\n",result);
}






22.Function find_substr( ) that takes two string arrays (a, b) as parameters, returns 1 if string b 
is found anywhere in string a, or returns  -1 if no match is found. 
             
                              (Assuming, strlen(a)>strlen(b))



#include<stdio.h>
#include<string.h>
int fimd_substring(char str[100],char sub[100])
{
   int i,j,len1,len2;
   len1=strlen(str);
   len2=strlen(sub);
   for(i=0;i<=len1-len2;i++)
   {
       for(j=0;j<=len2;j++)
       {
           if(str[i+j]!=sub[j])
           {
               break;
           }
           if(j==len2)
           {
               return 1;
           }
       }
   }
   return -1;
}
int main()
{
    char str[100],sub[100];
    int result;
    printf("Enter the string : ");
    gets(str);
    printf("Enter the substring : ");
    gets(sub);
    result=fimd_substring(str,sub);
    if(result==1)
    {
        printf("1");
    }
    else
    {
        printf("-1");
    }
}





23.Function find_substr( ) that takes two string arrays (a, b) as parameters, uses function 
str_length() to determine the lengths of the strings, and then looks for the smaller string 
anywhere in the bigger string. It returns 1 if the substring is found, or returns  -1 if no match 
is found.
 
                [Restriction: str_length() cannot uses built-in strlen() function]


#include <stdio.h>
#include <string.h>

int str_length(char ch[])
{
    int len=0,i=0;
    while(ch[i++]!='\0')
    {
        len++;
    }
    return len;
}

int find_substr(char str[],char sub[])
{
    int flag=0;
    for(int i = 0; i<str_length(str); i++)
    {
        int j=0;
        if(str[i] == sub[j])
        {
            int c=0;
            for(int j=0; j<str_length(sub);j++)
            {
                if(str[i+j]==sub[j])
                    c++;
            }
            if(c==str_length(sub))
                flag=1;
        }

    }
    if(flag==0)
    {
        return -1;
    }
    else
        return 1;
}
int main()
{
    char str[100],sub[100];
    printf("Enter the string : ");
    gets(str);
    printf("Enter the substring : ");
    gets(sub);
    printf("%d",find_substr(str,sub));

}





24.Program that continuously takes two positive integers as inputs and uses two functions to 
find their GCD (greatest common divisor) and LCM (least common multiple). Both functions 
take parameters and returns desired values. 

                                         [Hint: Use infinite loop to process inputs]


#include<stdio.h>

void gcd_lcm(int n1,int n2)
{
    int reminder,gcd,lcm,a,b;
    a=n1;
    b=n2;

    while(b!=0)
    {
        reminder = a%b;
        a = b;
        b = reminder;
    }
    gcd = a;
    lcm = (n1*n2)/gcd;
    printf("GCD : %d",gcd);
    printf("\nLCM : %d",lcm);   
}
int main()
{
    int x,y;
    while(1)
    {
    printf("Enter the two number : ");
    scanf("%d %d",&x,&y);
    
    gcd_lcm(x,y);
    printf("\n");
    }
    return 0;
}




25.Program that implements function to perform operations on a 3X5 matrix: 
                      
                                                               InputMatrix() 
                                                              ShowMatrix() 
                                                         ScalarMultiply()






26.Program that implements function to perform operations on a MXN matrix: 

                                                               InputMatrix() 
                                                               ShowMatrix() 
                                                          ScalarMultiply()






Program to convert a positive integer to another base using the following functions

            I. Get_Number_And_Base () : Takes number to be converted (N) and base value (B) 
               from user. Base must be between 2 and 16. 

           II. Convert_Number () : Does the conversion 

          III. Show_Converted_Number() : Displays the converted value.













// A function to check if a string str is palindrome or not………


#include <stdio.h>
#include <string.h>
 
void isPalindrome(char str[])
{
    int len,flag=0,i;
        len = strlen(str);

    for(i=0;i<len;i++)
    {
        if(str[i]!=str[len-i-1])
        {
            flag=1;
            break;
        }
        if(str[i]==str[len-i-1])
        {
            flag=0;
        }
    }
    if(flag==1)
    {
        printf("%s is not a palindrome\n", str);
    }
     if(flag==0)
    {
        printf("%s is a palindrome\n", str);
    }

}
 
// Driver program to test above function
int main()
{
    isPalindrome("abba");
    isPalindrome("abbccbba");
    isPalindrome("geeks");
    return 0;
}



                                                    Lab Assignment 


1.Function to take a string as input and find its length.

#include<stdio.h>
#include<string.h>
void string_length(char str[])
{
    int i,count=0;
    for(i=0;str[i]!='\0';i++)
    {
        count++;
    }
    printf("%d",count);
}
int main()
{
    char str[100];
    printf("Enter the string : ");
    gets(str);
    
    string_length(str);
    return 0;
}


#include<stdio.h>
#include<string.h>
int main ()
{
    char str1[150],str2[100];
    int n,i;
    int wicket;

    printf("Enter the Players name : ");
    gets(str1);
    printf(" Enter the Players country : ");
    gets(str2);

    printf("Enter the match number : ");
    scanf("%d",&n);

    printf("Enter the wickets : ");
    int w[n];
    for(i=0;i<n;i++)
    {
       scanf("\n%d",&w[i]); 
    }
    printf("Enter the runs : ");
    int r[n];
    for(i=0;i<n;i++)
    {
       scanf("\n%d",&r[i]); 
    }
    
    for(i=0;i<n;i++)
    {
      printf("\nmatch %d : \n",i+1);
       wicket = w[i] * 12;
      printf(" Wicket points : %d\n",wicket);
      if( r[i] <= 25)
    {
        printf(" run points 5");
    }
    else if( r[i] <= 50)
    {
        printf(" run points 10");
    }
    else if( r[i] <=75)
    {
        printf( "run points 15");
    }
    else if(76 <= r[i])
    {
        printf(" run points 20");
    }
     
    }
    
    
    return 0;
}



12




#include<stdio.h>
#include<string.h>

struct player
{
    char name[30];
    char country[20];
    int runs[3];
    int wickets[3];
    int points[3];
};
struct player input_information();
struct player process_ponts();
struct player decition();

struct player take_inform[2];

int main()
{

  input_information();
  process_ponts();
  decition();

}
struct player input_information()
{
    int i,j;
    for(i=0;i<2;i++)
    {
        printf("Enter the %d player information ",i+1);
        printf("\nName : ");
        fflush(stdin);
        gets(take_inform[i].name);
        printf("Countery : ");
        fflush(stdin);
        gets(take_inform[i].country);
        printf("Emte the runs : ");
        for(j=0;j<3;j++)
        {
            scanf("%d",&take_inform[i].runs[j]);
        }
        printf("Emte the wicket : ");
        for(j=0;j<3;j++)
        {
            scanf("%d",&take_inform[i].wickets[j]);
        }
    }
}
struct player process_ponts()
{
  int i,j;
  for(i=0;i<2;i++)
  {
      for(j=0;j<3;j++)
      {
          if(take_inform[i].runs[j] < 0)
          printf("Negative runs is invalid");
          else if(take_inform[i].runs[j] <= 25)
          take_inform[i].points[j] += 5;
          else if(take_inform[i].runs[j] > 25 && take_inform[i].runs[j] <= 50)
          take_inform[i].points[j] +=10;
          else if(take_inform[i].runs[j] > 50 && take_inform[i].runs[j] <= 75)
          take_inform[i].points[j] += 15;
          else if(take_inform[i].runs[j] > 75)
          take_inform[i].points[j] += 20;
          if(take_inform[i].wickets[j] >= 1)
          take_inform[i].points[j] += (12 * take_inform[i].wickets[j]);
      }
  }
}
struct player decition()
{
    int i,j,sum[2],a[2];
    for(i=0;i<3;i++)
    {    
        printf("Match : %d\n",i+1);
        for(j=0;j<2;j++)
        {
           printf("%s points : ",take_inform[j].name);
           printf(" %d \n",take_inform[j].points[i]);
           a[j] = take_inform[j].points[i];
        }
        if(a[0] > a[1])
        {
            printf(" MOM : %s ",take_inform[0].name);
        }
        else
        {
           printf(" MOM : %s ",take_inform[1].name); 
        }
        
        printf("\n\n");
    }
    for(i=0;i<2;i++)
    {
        for(j=0;j<3;j++)
        {
            sum[i] += take_inform[i].points[j];
        }
    }
    if(sum[0] > sum[1])
    {
        printf("Man of the series : %s",take_inform[0].name);
    }
    else
    { 
        printf("Man of the series : %s",take_inform[1].name);
    }
}
























#include<stdio.h>

struct player
{
    char Name[30];
    char Country[20];
    int Runs[3];
    int wickets[3];
    int points[3];
};

struct player input_information();
struct player process_points();
struct player decision();

struct player take_info[2];

int main()
{
    input_information();
    process_points();
    decision();
}

struct player input_information()
{ 
    int i,j;
    for ( i = 0; i < 2; i++)
    {
        printf("Enter player %d information: \n", i+1);
        printf("Name: "); 
        fflush(stdin);
        gets(take_info[i].Name);
        printf("Enter country name: ");
        fflush(stdin);
        gets(take_info[i].Country);
        printf("Enter the runs of the matches: ");
        for ( j = 0; j < 3; j++)
            scanf("%d",&take_info[i].Runs[j]);
        printf("Enter the wickets of the matches: ");
        for ( j = 0; j < 3; j++)
            scanf("%d",&take_info[i].wickets[j]);
        printf("\n\n");
    }
}

struct player process_points()
{
    int i,j;
    for ( i = 0; i < 2; i++)
    {
        for ( j = 0; j < 3; j++)
        {
            if (take_info[i].Runs[j] < 0)
                printf("Negative runs is invalid");
            else if (take_info[i].Runs[j] <= 25)
                take_info[i].points[j] += 5;
            else if (take_info[i].Runs[j] > 25 && take_info[i].Runs[j] <= 50)
                take_info[i].points[j] += 10;
            else if (take_info[i].Runs[j] > 50 && take_info[i].Runs[j] <= 75)
                take_info[i].points[j] += 15;
            else if (take_info[i].Runs[j] > 75)
                take_info[i].points[j] += 20;
            if (take_info[i].wickets[j] < 0)
                printf("Wickets cannot be Negative.");
            else if (take_info[i].wickets[j] >= 1)
                take_info[i].points[j] += (12 * take_info[i].wickets[j]);
        }
    }
}

struct player decision()
{
    int i,j,sum[2],a[2];
    for ( i = 0; i < 3; i++)
    {
        printf("Match %d:\n",i+1);
        for (j = 0; j < 2; j++)
        {
            printf("%s points",take_info[j].Name);
            printf(": %d\n",take_info[j].points[i]);
            a[j]=take_info[j].points[i];
        }
        if(a[0] > a[1])
            printf("MOM: %s",take_info[0].Name);
        else
            printf("MOM: %s",take_info[1].Name);
        printf("\n\n");
    }
    for ( i = 0; i < 2; i++)
    {
        for ( i = 0; i < 3; i++)
            sum[i] += take_info[i].points[j];
    }
    if (sum[0] > sum[1])
        printf("Man of the series: %s",take_info[0].Name);
    else
        printf("Man of the series: %s",take_info[1].Name);
    printf("\n\n\n");
}






#### Write a program that takes a sentence from keyboard, makes the sentence camel/title 
casing (first letter of all words capital), appends your student id at the end of the 
sentence as the last word, and finally display the sentence. 
For example, if your id is â€œ011202017â€ 
Input = â€œIt is a nice sunny morning today
Output: â€œIt Is A Nice Sunny Morning Today 011202017



#include<stdio.h>
#include<string.h>
int main()
{
    char s[100];
    char  Id[100];
    int i;
    gets(s);
    gets(Id);
    for(i=0;s[i]!='\0';i++)
    {
        if(i==0)
        {
            s[i]=s[i]-32;
        }
        if (s[i]==' '){
            s[i+1]=s[i+1]-32;
        }
    }
    strcat(s,Id);
    printf ("%s",s);
    return 0;
}














                                                                 Function Related Problems 
                                                                       (Total 27 questions) 


1.Function to print a custom message. 

#include<stdio.h>

void message_print()
{
   printf("This is a function"); 
}

int main()
{
   message_print();
   return 0;
}



2.Function to print an input character value.

#include<stdio.h>

void print_character( char c)
{
    printf("Value received from main : %c",c);
}
int main()
{
   char a;
   printf("Enter the any character : ");
   scanf("%c",&a);
   print_character(a);
   return 0;   
}



3.Function to determine if a number is even or odd.

#include<stdio.h>

void checking_number(int x)
{
    if(x % 2 == 0)
    {
        printf("Even");
    }
    else
    {
        printf("Odd");
    }
}

int main()
{
    int a;
    printf("Enter the number : ");
    scanf("%d",&a);

    checking_number(a);

}



4.Function to determine if a number is positive, negative or zero.

#include<stdio.h>

void checking_number(int x)
{
    if(x>0)
   {
      printf("Positive");
   }
   else if(x<0)
   {
       printf("Negative");
   }
   else if(x==0)
   {
       printf("Zero");
   } 
}

int main()
{
   int a;
   printf("Enter the number : ");
   scanf("%d",&a);

   checking_number(a);

   return 0;
}


5.Function that takes two numbers as input and determines if the first number is greater than, 
equal to or less than the second number.

#include<stdio.h>

void checking_number(int x,int y)
{
    if(x>y)
   {
       printf("%d  is greater than %d",x,y);
   }
   else if(x<y)
   {
       printf("%d is less than %d",x,y);
   }
   else if(x==y)
   {
       printf("%d  is equal to %d",x,y);
   }
}

int main()
{
   int a,b;
   printf("Enter the two number : ");
   scanf("%d %d",&a,&b);

   checking_number(a,b);

   return 0;
}


6.Function to calculate the sum of n numbers coming from the console. 

#include<stdio.h>

int sum_number(int x,int y,int z)
{
    int sum;
    sum=x + y + z;
   printf(" Sum In Function: %d",sum);
   return sum;
}

int main()
{
   int a,b,c,sum;
   printf("Enter the three number : ");
   scanf("%d %d %d",&a,&b,&c);
   
   sum = sum_number(a,b,c);

   printf("\nSum In Main : %d",sum);
   
   return 0;
}


7.Function to calculate the sum of n numbers coming from the console and stored in an array. 

#include<stdio.h>

int sum_number(int x[],int n)
{
    int i,sum=0;
    for(i=0;i<n;i++)
    {
    sum = sum + x[i];
    }
   printf(" Sum In Function: %d",sum);
   return sum;
}

int main()
{
   int n,i,sum;
   printf("Enter the  number : ");
   scanf("%d",&n);

   int a[n];
   for(i=0;i<n;i++)
   {
       scanf("%d",&a[i]);
   }
   
   sum = sum_number(a,n);

   printf("\nSum In Main : %d",sum);
   
   return 0;
}



8.Function that takes an array of n integer numbers as input and prints them in reverse order.

#include<stdio.h>

int rev_number(int x[],int n)
{
    int i,rev;
    for(i=n-1;i>=0;i--)
    {
      printf(" %d ",x[i]);
    }
   return rev;
   
}

int main()
{
   int n,i,rev;
   printf("Enter the  number : ");
   scanf("%d",&n);

   int a[n];
   for(i=0;i<n;i++)
   {
       scanf("%d",&a[i]);
   }
   
   rev = rev_number(a,n);
   
   return 0;
}



9.Function to calculate the factorial of a number. 

#include<stdio.h>

int factorial_number(int x)
{
    int i,fact=1;
    for(i=1;i<=x;i++)
    {
        fact=fact*i;    
    }
    return fact;

}
int main()
{ 
    int n,i,fact;
    printf("Enter the number : ");
    scanf("%d",&n);

    fact = factorial_number(n);
    printf("%d",fact);
    return 0;
}


10.Function to take two positive numbers x and y as input and calculate x to the power y.

#include<stdio.h>

int power_number(int x,int y)
{
    int i,pow=1;
    for(i=1;i<=y;i++)
 {
    pow=pow * x;
 }
 return pow;
}
int main()
{
 int a,b,pow;
 printf("Enter the number : ");
 scanf("%d %d",&a,&b);

 pow = power_number(a,b);
 printf("%d to the power %d is : %d",a,b,pow);
 return 0;
}


11.Function to take a string as input and find its length. 

#include<stdio.h>
#include<string.h>

void string_len(char str[])
{
    int i,count=0;
    for(i=0;str[i]!='\0';i++)
    {
        count++;
    }
    printf("%d",count);
}
int main()
{
    char str[50];
    
    printf("Enter the string : ");
    gets(str);
    string_len(str);
    return 0;
}


12.Function to swap two numbers. 
(Restriction: Pass by value) 



13.Function to swap two numbers. 
(Restriction: Pass by reference)



14.Function to determine only even numbers in an array of input integers.

#include<stdio.h>

void even_number(int a[],int n)
{
    int i;
     
    for(i=0;i<n;i++)
    {
        if(a[i]%2==0)
        {
            printf(" %d ",a[i]);
        }
    }
}

int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);
    int x[n];
    for(i=0;i<n;i++)
     {
         scanf("%d",&x[i]);
     }
    even_number(x,n);
    return 0;
}


15.Function that finds and returns the minimum value in an array.

#include<stdio.h>
int  minimum_number(int x[],int n)
{
    int i,mini;
    mini = x[0];
    for(i=0;i<n;i++)
    {
        if(x[i]<mini)
        {
            mini = x[i];
        }
    }
    return mini;
}
int main()
{
    int n,i,mini;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }
    
    mini =  minimum_number(a,n);
    printf(" Minimum Value : %d",mini);
    return 0;
}



16.Function that multiplies the array elements by 2 and returns the array.

#include<stdio.h>
void multiplies_array(int x[],int n)
{
    int i;
    for(i=0;i<n;i++)
    {
       printf(" %d ",x[i]*2);
    }
    
}
int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }

    multiplies_array(a,n);
    
    return 0;
}


17.Function to sort and return an input array in ascending order. 

#include<stdio.h>
void  ascending_array(int x[],int n)
{
    int i,j,temp;
    for(i=0;i<n;i++)
    {
       for(j=i+1;j<n;j++)
       {
           if(x[i]>x[j])
           {
               temp=x[i];
               x[i]=x[j];
               x[j]=temp;
           }
       }
       printf(" %d ",x[i]);
    }
      
}
int main()
{
    int n,i;
    printf("Enter the number : ");
    scanf("%d",&n);

    int a[n];
    for(i=0;i<n;i++)
    {
        scanf("%d",&a[i]);
    }

    ascending_array(a,n);
    
    return 0;
}



18.Function “IsPrime()” to determine whether a number is prime or not.

#include<stdio.h>

void IsPrime(int n)
{
   int i,flag=0;

    if(i==1 || i==0)
   {
       printf("Not Prime");
       
   }
   for(i=2;i<=n/2;i++)
    {
        
        if(n % i == 0)
        {
            flag = 1;
            printf("Not Prime \n");
            break;
        }
     if(n % i != 0)
        {
            flag = 0;
            printf(" Prime \n");
            break;
        }
    }
}

int main()
{
    int a;
    printf("Enter the number : ");
    scanf("%d",&a);
    
    IsPrime(a);

return 0;
}


19.Function “GeneratePrime()” to compute the prime numbers less than N, where N is an input 
integer. GeneratePrime() uses IsPrime() to check whether a number is prime or not. 






20.Function “GenNthPrime()”to compute the N th prime number, where N is an integer input. 






21.Implement the following functions and calculate standard deviation of an array whose values 
come from the terminal
                                                                           TakeInput() 
                                                                   CalcMean(array, num_of_elem) 
                                                          Calc_Std_deviation(array, num_of_elem) 




#include <stdio.h>
#include <math.h>

void take_input(int x[],int n)
{
  int i;
  printf("Enter the element : \n");
  for(i=0; i<n; i++)
   {
     scanf("%d", &x[i]);
   }
}
float cal_mean(int x[],int n )
{
    int i,sum=0;
    float mean;
     for(i=0; i<n; i++)
   {
     sum = sum + x[i];
   }
  mean = sum /n;
  return mean;
}

void standard_deviation(int x[],int n)
{    
    int i,sum1=0;
    float Variance,sd,M;
    M=cal_mean(x,n);
  for(i=0; i<n; i++)
   {
    
     sum1 = sum1 + pow( x[i] - M,2);
   }
  Variance = sum1 / n;
  sd = sqrt(Variance);
  printf(" Standard Deviation : %.2f",sd);
}

int main()
{
  int  n;
   
  printf(" Enter the number Value : ");
  scanf("%d", &n);
  int a[n];
 
   take_input(a,n);
   standard_deviation(a,n); 
}














#include <stdio.h>
#include <math.h>

float standard_deviation(float a[],int n)
{    
    int i;
    float Mean,Variance,sd,sum=0,sum1=0;
    for(i=0; i<n; i++)
   {
     sum = sum + a[i];
   }
  
  Mean = sum /n;

  for(i=0; i<n; i++)
   {
    
     sum1 = sum1 + pow( a[i] - Mean,2);
   }
  Variance = sum1 / n;
  sd = sqrt(Variance);
  return sd;
}

int main()
{
  
  int  i,n;
  float result; 
  printf(" Enter the number Value : ");
  scanf("%d", &n);

  printf("Enter the element : \n");
  float x[n];
  for(i=0; i<n; i++)
   {
     scanf("%f", &x[i]);
   }
   
   result = standard_deviation(x,n);
  
  printf("Standard deviation = %.2f\n",result);
}






22.Function find_substr( ) that takes two string arrays (a, b) as parameters, returns 1 if string b 
is found anywhere in string a, or returns  -1 if no match is found. 
             
                              (Assuming, strlen(a)>strlen(b))



#include<stdio.h>
#include<string.h>
int fimd_substring(char str[100],char sub[100])
{
   int i,j,len1,len2;
   len1=strlen(str);
   len2=strlen(sub);
   for(i=0;i<=len1-len2;i++)
   {
       for(j=0;j<=len2;j++)
       {
           if(str[i+j]!=sub[j])
           {
               break;
           }
           if(j==len2)
           {
               return 1;
           }
       }
   }
   return -1;
}
int main()
{
    char str[100],sub[100];
    int result;
    printf("Enter the string : ");
    gets(str);
    printf("Enter the substring : ");
    gets(sub);
    result=fimd_substring(str,sub);
    if(result==1)
    {
        printf("1");
    }
    else
    {
        printf("-1");
    }
}





23.Function find_substr( ) that takes two string arrays (a, b) as parameters, uses function 
str_length() to determine the lengths of the strings, and then looks for the smaller string 
anywhere in the bigger string. It returns 1 if the substring is found, or returns  -1 if no match 
is found.
 
                [Restriction: str_length() cannot uses built-in strlen() function]


#include <stdio.h>
#include <string.h>

int str_length(char ch[])
{
    int len=0,i=0;
    while(ch[i++]!='\0')
    {
        len++;
    }
    return len;
}

int find_substr(char str[],char sub[])
{
    int flag=0;
    for(int i = 0; i<str_length(str); i++)
    {
        int j=0;
        if(str[i] == sub[j])
        {
            int c=0;
            for(int j=0; j<str_length(sub);j++)
            {
                if(str[i+j]==sub[j])
                    c++;
            }
            if(c==str_length(sub))
                flag=1;
        }

    }
    if(flag==0)
    {
        return -1;
    }
    else
        return 1;
}
int main()
{
    char str[100],sub[100];
    printf("Enter the string : ");
    gets(str);
    printf("Enter the substring : ");
    gets(sub);
    printf("%d",find_substr(str,sub));

}





24.Program that continuously takes two positive integers as inputs and uses two functions to 
find their GCD (greatest common divisor) and LCM (least common multiple). Both functions 
take parameters and returns desired values. 

                                         [Hint: Use infinite loop to process inputs]


#include<stdio.h>

void gcd_lcm(int n1,int n2)
{
    int reminder,gcd,lcm,a,b;
    a=n1;
    b=n2;

    while(b!=0)
    {
        reminder = a%b;
        a = b;
        b = reminder;
    }
    gcd = a;
    lcm = (n1*n2)/gcd;
    printf("GCD : %d",gcd);
    printf("\nLCM : %d",lcm);   
}
int main()
{
    int x,y;
    while(1)
    {
    printf("Enter the two number : ");
    scanf("%d %d",&x,&y);
    
    gcd_lcm(x,y);
    printf("\n");
    }
    return 0;
}




25.Program that implements function to perform operations on a 3X5 matrix: 
                      
                                                               InputMatrix() 
                                                              ShowMatrix() 
                                                         ScalarMultiply()






26.Program that implements function to perform operations on a MXN matrix: 

                                                               InputMatrix() 
                                                               ShowMatrix() 
                                                          ScalarMultiply()






Program to convert a positive integer to another base using the following functions

            I. Get_Number_And_Base () : Takes number to be converted (N) and base value (B) 
               from user. Base must be between 2 and 16. 

           II. Convert_Number () : Does the conversion 

          III. Show_Converted_Number() : Displays the converted value.













// A function to check if a string str is palindrome or not………


#include <stdio.h>
#include <string.h>
 
void isPalindrome(char str[])
{
    int len,flag=0,i;
        len = strlen(str);

    for(i=0;i<len;i++)
    {
        if(str[i]!=str[len-i-1])
        {
            flag=1;
            break;
        }
        if(str[i]==str[len-i-1])
        {
            flag=0;
        }
    }
    if(flag==1)
    {
        printf("%s is not a palindrome\n", str);
    }
     if(flag==0)
    {
        printf("%s is a palindrome\n", str);
    }

}
 
// Driver program to test above function
int main()
{
    isPalindrome("abba");
    isPalindrome("abbccbba");
    isPalindrome("geeks");
    return 0;
}



                                                    Lab Assignment 


1.Function to take a string as input and find its length.

#include<stdio.h>
#include<string.h>
void string_length(char str[])
{
    int i,count=0;
    for(i=0;str[i]!='\0';i++)
    {
        count++;
    }
    printf("%d",count);
}
int main()
{
    char str[100];
    printf("Enter the string : ");
    gets(str);
    
    string_length(str);
    return 0;
}


#include<stdio.h>
#include<string.h>
int main ()
{
    char str1[150],str2[100];
    int n,i;
    int wicket;

    printf("Enter the Players name : ");
    gets(str1);
    printf(" Enter the Players country : ");
    gets(str2);

    printf("Enter the match number : ");
    scanf("%d",&n);

    printf("Enter the wickets : ");
    int w[n];
    for(i=0;i<n;i++)
    {
       scanf("\n%d",&w[i]); 
    }
    printf("Enter the runs : ");
    int r[n];
    for(i=0;i<n;i++)
    {
       scanf("\n%d",&r[i]); 
    }
    
    for(i=0;i<n;i++)
    {
      printf("\nmatch %d : \n",i+1);
       wicket = w[i] * 12;
      printf(" Wicket points : %d\n",wicket);
      if( r[i] <= 25)
    {
        printf(" run points 5");
    }
    else if( r[i] <= 50)
    {
        printf(" run points 10");
    }
    else if( r[i] <=75)
    {
        printf( "run points 15");
    }
    else if(76 <= r[i])
    {
        printf(" run points 20");
    }
     
    }
    
    
    return 0;
}



12




#include<stdio.h>
#include<string.h>

struct player
{
    char name[30];
    char country[20];
    int runs[3];
    int wickets[3];
    int points[3];
};
struct player input_information();
struct player process_ponts();
struct player decition();

struct player take_inform[2];

int main()
{

  input_information();
  process_ponts();
  decition();

}
struct player input_information()
{
    int i,j;
    for(i=0;i<2;i++)
    {
        printf("Enter the %d player information ",i+1);
        printf("\nName : ");
        fflush(stdin);
        gets(take_inform[i].name);
        printf("Countery : ");
        fflush(stdin);
        gets(take_inform[i].country);
        printf("Emte the runs : ");
        for(j=0;j<3;j++)
        {
            scanf("%d",&take_inform[i].runs[j]);
        }
        printf("Emte the wicket : ");
        for(j=0;j<3;j++)
        {
            scanf("%d",&take_inform[i].wickets[j]);
        }
    }
}
struct player process_ponts()
{
  int i,j;
  for(i=0;i<2;i++)
  {
      for(j=0;j<3;j++)
      {
          if(take_inform[i].runs[j] < 0)
          printf("Negative runs is invalid");
          else if(take_inform[i].runs[j] <= 25)
          take_inform[i].points[j] += 5;
          else if(take_inform[i].runs[j] > 25 && take_inform[i].runs[j] <= 50)
          take_inform[i].points[j] +=10;
          else if(take_inform[i].runs[j] > 50 && take_inform[i].runs[j] <= 75)
          take_inform[i].points[j] += 15;
          else if(take_inform[i].runs[j] > 75)
          take_inform[i].points[j] += 20;
          if(take_inform[i].wickets[j] >= 1)
          take_inform[i].points[j] += (12 * take_inform[i].wickets[j]);
      }
  }
}
struct player decition()
{
    int i,j,sum[2],a[2];
    for(i=0;i<3;i++)
    {    
        printf("Match : %d\n",i+1);
        for(j=0;j<2;j++)
        {
           printf("%s points : ",take_inform[j].name);
           printf(" %d \n",take_inform[j].points[i]);
           a[j] = take_inform[j].points[i];
        }
        if(a[0] > a[1])
        {
            printf(" MOM : %s ",take_inform[0].name);
        }
        else
        {
           printf(" MOM : %s ",take_inform[1].name); 
        }
        
        printf("\n\n");
    }
    for(i=0;i<2;i++)
    {
        for(j=0;j<3;j++)
        {
            sum[i] += take_inform[i].points[j];
        }
    }
    if(sum[0] > sum[1])
    {
        printf("Man of the series : %s",take_inform[0].name);
    }
    else
    { 
        printf("Man of the series : %s",take_inform[1].name);
    }
}
























#include<stdio.h>

struct player
{
    char Name[30];
    char Country[20];
    int Runs[3];
    int wickets[3];
    int points[3];
};

struct player input_information();
struct player process_points();
struct player decision();

struct player take_info[2];

int main()
{
    input_information();
    process_points();
    decision();
}

struct player input_information()
{ 
    int i,j;
    for ( i = 0; i < 2; i++)
    {
        printf("Enter player %d information: \n", i+1);
        printf("Name: "); 
        fflush(stdin);
        gets(take_info[i].Name);
        printf("Enter country name: ");
        fflush(stdin);
        gets(take_info[i].Country);
        printf("Enter the runs of the matches: ");
        for ( j = 0; j < 3; j++)
            scanf("%d",&take_info[i].Runs[j]);
        printf("Enter the wickets of the matches: ");
        for ( j = 0; j < 3; j++)
            scanf("%d",&take_info[i].wickets[j]);
        printf("\n\n");
    }
}

struct player process_points()
{
    int i,j;
    for ( i = 0; i < 2; i++)
    {
        for ( j = 0; j < 3; j++)
        {
            if (take_info[i].Runs[j] < 0)
                printf("Negative runs is invalid");
            else if (take_info[i].Runs[j] <= 25)
                take_info[i].points[j] += 5;
            else if (take_info[i].Runs[j] > 25 && take_info[i].Runs[j] <= 50)
                take_info[i].points[j] += 10;
            else if (take_info[i].Runs[j] > 50 && take_info[i].Runs[j] <= 75)
                take_info[i].points[j] += 15;
            else if (take_info[i].Runs[j] > 75)
                take_info[i].points[j] += 20;
            if (take_info[i].wickets[j] < 0)
                printf("Wickets cannot be Negative.");
            else if (take_info[i].wickets[j] >= 1)
                take_info[i].points[j] += (12 * take_info[i].wickets[j]);
        }
    }
}

struct player decision()
{
    int i,j,sum[2],a[2];
    for ( i = 0; i < 3; i++)
    {
        printf("Match %d:\n",i+1);
        for (j = 0; j < 2; j++)
        {
            printf("%s points",take_info[j].Name);
            printf(": %d\n",take_info[j].points[i]);
            a[j]=take_info[j].points[i];
        }
        if(a[0] > a[1])
            printf("MOM: %s",take_info[0].Name);
        else
            printf("MOM: %s",take_info[1].Name);
        printf("\n\n");
    }
    for ( i = 0; i < 2; i++)
    {
        for ( i = 0; i < 3; i++)
            sum[i] += take_info[i].points[j];
    }
    if (sum[0] > sum[1])
        printf("Man of the series: %s",take_info[0].Name);
    else
        printf("Man of the series: %s",take_info[1].Name);
    printf("\n\n\n");
}






#### Write a program that takes a sentence from keyboard, makes the sentence camel/title 
casing (first letter of all words capital), appends your student id at the end of the 
sentence as the last word, and finally display the sentence. 
For example, if your id is â€œ011202017â€ 
Input = â€œIt is a nice sunny morning today
Output: â€œIt Is A Nice Sunny Morning Today 011202017



#include<stdio.h>
#include<string.h>
int main()
{
    char s[100];
    char  Id[100];
    int i;
    gets(s);
    gets(Id);
    for(i=0;s[i]!='\0';i++)
    {
        if(i==0)
        {
            s[i]=s[i]-32;
        }
        if (s[i]==' '){
            s[i+1]=s[i+1]-32;
        }
    }
    strcat(s,Id);
    printf ("%s",s);
    return 0;
}













          Assignment code_1
#include<stdio.h>
#include<string.h>
struct candidate
{
    char name[1000];
    char email[1000];
    char password[1000];
    float marks;

}a;
int login(char p[],char q[],char r[],char s[])
{
    int flag1=1,flag2=1,x;
    flag1=strcmp(p,q);
    flag2=strcmp(r,s);
    if(flag1==0 && flag2==0)
        x=1;
    else
        x=0;
    return x;
}


int main()
{
    printf("Welcome!!\n");
    int n=1135,fix,check=0;
    char st[1000];
    struct candidate a[n];
    for(int i=0;i<n;i++)
    {
        printf("Please insert your name: ");
        gets(st);
        strcpy(a[i].name,st);
        printf("Please insert email: ");
        gets(st);
        strcpy(a[i].email,st);
        printf("Please insert password: ");
        gets(st);
        strcpy(a[i].password,st);
        printf("Please insert marks: ");
        scanf("%f",&a[i].marks);
        getchar();
        printf("\n");
    }
    printf("Welcome to Login Wizard!!\n");
    char mail[1000],pass[1000];
    printf("Please input email: ");
    gets(mail);
    printf("Pleae input password: ");
    gets(pass);
    for(int i=0;i<n;i++)
    {
        int f=login(mail,a[i].email,pass,a[i].password);
        if(f==1)
        {
            fix=i;
            check++;
            break;
        }
    }
    if(check!=0)
        printf("The Marks is : %f",a[fix].marks);
    else
        printf("Wrong Name/email");
    return 0;

}


Assignment code_2
#include<stdio.h>
#include<string.h>
int search(float ar[],float x,int n,int r)
{
    int flag=0,k;
    for(int i=0;i<n;i++)
    {
        if(x==ar[i])
        {
            flag++;
            if(flag==r)
                {
                    k=i;
                    break;
                }
        }
    }
    if(flag!=r)
        return -1;
    else
        return k;



}

int main()
{
    int n;
    printf("Please enter array size: ");
    scanf("%d",&n);
    float ar[n];
    for(int i=0;i<n;i++)
    {
        printf("Please enter value no %d: ",i+1);
        scanf("%f",&ar[i]);
    }
    float x;
    int r;
    printf("Please enter value to search: ");
    scanf("%f",&x);
    printf("Please enter occurrence number = ");
    scanf("%d",&r);
    int f=search(ar,x,n,r);
    if(f==-1)
        printf("Not Found!!");
    else
        printf("Found at index %d",f);
    return 0;
}


Assignment Code_3
#include<stdio.h>
#include<string.h>
#include<ctype.h>
int main()
{
    int n;
    float ar[6][45]={{1135%11+10,1135%11+10}};
        for(int k=0;k<45;k++)
        {
            int sum=1;
            for(int i=1;i<=10;i++)
                sum*=i;
            for(int j=1;j<=10;j++)
                sum*=j;
            ar[2][k]+=sum;
        }
        for(int i=0;i<6;i++)
        {
            for(int j=0;j<45;j++)
            {
                printf("%f ",ar[i][j]);
            }
            printf("\n");
        }


}


Assignment Code_5
#include<stdio.h>
#include<string.h>
#include<ctype.h>
int main()
{
    FILE *fp;
    fp=fopen("C://Users//Zobaer Ibn Razzaque//Documents//CODING//TEST//sample.txt","r");
    rewind(fp);
    int sum=0,x=0,a;

        while(fscanf(fp,"%d",&a)!=EOF);
        {
            fscanf(fp,"%d",&a);
            sum+=a;
            x++;
        }
        printf("Avg: %d",sum/x);
        fclose(fp);
}
Assignment Code_7
#include<stdio.h>
int GCD(int a,int b)
{
    if(b!=0)
        GCD(b,a%b);
    else
        return a;

}

int main()
{
    int a,b,gcd;
    scanf("%d",&a);
    scanf("%d",&b);
    gcd=GCD(a,b);
    printf("GCD: %d",gcd);
}
Assignment Code_12
#include<stdio.h>
#include<string.h>
int main()
{
    char a[1000];
    gets(a);
    char *p;
    p=a;
    int count=0;
    for(int i=0;*(p+i)!='\0';i++)
    {
        if((*(p+i)>='A' && *(p+i)<='Z')||(*(p+i)>='a' && *(p+i)<='z'))
            count++;
    }
    if(count%2==0)
        printf("ID");
    else
        printf("Name");
}

Assignment Code_13
#include<stdio.h>
#include<string.h>
#include<ctype.h>
int main()
{
    char a[1000],b[]=" 011221135";;
    gets(a);
    int k=0;
    for(int i=0;a[i]!='\0';i++)
    {
        if(a[i]==' ')
            a[i+1]=toupper(a[i+1]);
    }

    strcat(a,b);
    puts(a);
}





